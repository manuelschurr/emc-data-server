{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/pulsOxy.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/pulsOxy.vue","mtime":1597839199944},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["pulsOxy.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row align-items-start\">\n      <div class=\"col-12\">\n        <form class=\"form-inline\" style=\"align-items: center;\">\n          <div class=\"col-9\">\n            <puls-oxy-line\n              class=\"small\"\n              v-if=\"loaded\"\n              :chart-data=\"pulseChartData\"\n            />\n          </div>\n          <div class=\"col-3 pulseColor\">\n            <br />\n            <b>Pulse</b>\n            <br />\n            <span\n              v-if=\"(loaded && lastPulse > 130) || lastPulse < 60\"\n              class=\"bigFont notOkPulseOxy\"\n              >{{ lastPulse }}</span\n            >\n            <span v-else class=\"bigFont\">{{ lastPulse }}</span>\n            <svg\n              v-if=\"(loaded && lastPulse > 130) || lastPulse < 60\"\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              class=\"bi bi-heart notOkPulseOxy\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\n              />\n            </svg>\n            <svg\n              v-else\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              class=\"bi bi-heart\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\n              />\n            </svg>\n            <br />PR/min\n          </div>\n        </form>\n      </div>\n      <div class=\"col-12\">\n        <form class=\"form-inline\" style=\"align-items: center;\">\n          <div class=\"col-9\">\n            <puls-oxy-line\n              class=\"small\"\n              v-if=\"loaded\"\n              :chart-data=\"spo2ChartData\"\n            />\n          </div>\n          <div class=\"col-3 spo2Color\">\n            <br />\n            <b> SpO<sub>2</sub> </b>\n            <br />\n            <span\n              v-if=\"(loaded && lastSpo2 >= 100) || lastSpo2 < 90\"\n              class=\"bigFont notOkPulseOxy\"\n              >{{ lastSpo2 }}</span\n            >\n            <span v-else class=\"bigFont\">{{ lastSpo2 }}</span>\n            O<sub>2</sub> <br />SpO<sub>2</sub>%\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PulsOxyLine from \"./pulsOxyLine.vue\";\nconst axios = require(\"axios\");\n\nexport default {\n  name: \"LineChartContainer\",\n  components: { PulsOxyLine },\n  data() {\n    return {\n      loaded: false,\n      timer: \"\",\n      pulseChartData: null,\n      spo2ChartData: null,\n      pulseData: [],\n      lastPulse: \"\",\n      pulseLabels: [],\n      spo2Data: [],\n      lastSpo2: \"\",\n      spo2Labels: [],\n    };\n  },\n  // props: {\n  //   Rtwdocument: Object,\n  // },\n  mounted() {\n    this.fillData();\n  },\n  created() {\n    this.timer = setInterval(this.fillData, 1000);\n  },\n  computed: {\n    lastPulseCompute() {\n      var lastPulseData = this.pulseData[this.pulseData.length - 1];\n      this.$root.$emit(\"lastPulseData\", lastPulseData);\n      return lastPulseData;\n    },\n    lastSpo2Compute() {\n      var lastSpo2Data = this.spo2Data[this.spo2Data.length - 1];\n      this.$root.$emit(\"lastSpo2Data\", lastSpo2Data);\n      return lastSpo2Data;\n    },\n  },\n  methods: {\n    async fillData() {\n      var vm = this;\n      this.loading = true;\n\n      if (vm.pulseData.length == 0) {\n        var body = \"\";\n        var config = {\n          method: \"get\",\n          url: \"https://134.155.48.211:3000/patient/findByPatientId/\" + \"1\",\n          // vm.Rtwdocument.patientID,\n          headers: {},\n          data: body,\n        };\n\n        axios(config)\n          .then(function (responsePatient) {\n            if (responsePatient.data.statusCode === \"10000\") {\n              var bodySecond = \"\";\n              var configSecond = {\n                method: \"get\",\n                url:\n                  \"https://134.155.48.211:3000/patient/findPulsoxyByPatientIdAndTimestamp?patientId=\" +\n                  \"1\" +\n                  \"&timestamp=\" +\n                  responsePatient.data.data.createdAt,\n                // vm.Rtwdocument.patientID,\n                headers: {},\n                data: bodySecond,\n              };\n\n              axios(configSecond).then(function (responsePulseOxy) {\n                if (responsePulseOxy.data.statusCode === \"10000\") {\n                  console.log(responsePulseOxy.data);\n                  var i;\n                  for (\n                    i = responsePulseOxy.data.data.length - 20;\n                    i < responsePulseOxy.data.data.length;\n                    i++\n                  ) {\n                    vm.pulseData.push(\n                      responsePulseOxy.data.data[i].pulsrate.toString()\n                    );\n                    vm.pulseLabels.push(\n                      responsePulseOxy.data.data[i].timestamp.slice(11, 19)\n                    );\n                    vm.spo2Data.push(\n                      responsePulseOxy.data.data[i].spo2.toString()\n                    );\n                    vm.spo2Labels.push(\n                      responsePulseOxy.data.data[i].timestamp.slice(11, 19)\n                    );\n                  }\n                  vm.pulseChartData = {\n                    labels: vm.pulseLabels,\n                    datasets: [\n                      {\n                        label: \"Pulse\",\n                        borderColor: \"#36d7e7\",\n                        pointBackgroundColor: \"white\",\n                        borderWidth: 2,\n                        pointBorderColor: \"#36d7e7\",\n                        backgroundColor: \"transparent\",\n                        pointRadius: 0,\n                        data: vm.pulseData,\n                      },\n                    ],\n                  };\n                  vm.spo2ChartData = {\n                    labels: vm.pulseLabels,\n                    datasets: [\n                      {\n                        label: \"Spo2\",\n                        borderColor: \"#36c1e7\",\n                        pointBackgroundColor: \"white\",\n                        borderWidth: 2,\n                        pointBorderColor: \"#36c1e7\",\n                        backgroundColor: \"transparent\",\n                        pointRadius: 0,\n                        data: vm.spo2Data,\n                      },\n                    ],\n                  };\n                  vm.lastPulse = vm.lastPulseCompute;\n                  vm.lastSpo2 = vm.lastSpo2Compute;\n                  vm.loaded = true;\n                }\n              });\n            }\n          })\n          .catch(function (error) {\n            console.log(\"AXIOS ERROR: \" + error);\n          })\n          .finally(() => (this.loading = false));\n        await this.$nextTick();\n      } else {\n        var bodyPulsoxy = \"\";\n        var configPulsoxy = {\n          method: \"get\",\n          url:\n            \"https://134.155.48.211:3000/patient/findPulsoxyByPatientId/\" + \"1\",\n          // vm.Rtwdocument.patientID,\n          headers: {},\n          data: bodyPulsoxy,\n        };\n\n        axios(configPulsoxy)\n          .then(function (responsePulseOxy) {\n            if (responsePulseOxy.data.statusCode === \"10000\") {\n              // if (\n              //   responsePulseOxy.data.data.timestamp.slice(11, 19) !=\n              //   vm.pulseLabels[vm.pulseLabels.length - 1]\n              // ) {\n              vm.pulseData.push(responsePulseOxy.data.data.pulsrate.toString());\n              vm.pulseLabels.push(\n                responsePulseOxy.data.data.timestamp.slice(11, 19)\n              );\n              vm.spo2Data.push(responsePulseOxy.data.data.spo2.toString());\n              vm.spo2Labels.push(\n                responsePulseOxy.data.data.timestamp.slice(11, 19)\n              );\n              // }\n\n              if (\n                vm.pulseData.length >= 20 ||\n                vm.pulseLabels.length >= 20 ||\n                vm.spo2Data.length >= 20 ||\n                vm.spo2Labels.length >= 20\n              ) {\n                vm.pulseData.shift();\n                vm.pulseLabels.shift();\n                vm.spo2Data.shift();\n                vm.spo2Labels.shift();\n              }\n              vm.pulseChartData = {\n                labels: vm.pulseLabels,\n                datasets: [\n                  {\n                    label: \"Pulse\",\n                    borderColor: \"#36d7e7\",\n                    pointBackgroundColor: \"white\",\n                    borderWidth: 2,\n                    pointBorderColor: \"#36d7e7\",\n                    backgroundColor: \"transparent\",\n                    pointRadius: 0,\n                    data: vm.pulseData,\n                  },\n                ],\n              };\n              vm.spo2ChartData = {\n                labels: vm.pulseLabels,\n                datasets: [\n                  {\n                    label: \"Spo2\",\n                    borderColor: \"#36c1e7\",\n                    pointBackgroundColor: \"white\",\n                    borderWidth: 2,\n                    pointBorderColor: \"#36c1e7\",\n                    backgroundColor: \"transparent\",\n                    pointRadius: 0,\n                    data: vm.spo2Data,\n                  },\n                ],\n              };\n              vm.lastPulse = vm.lastPulseCompute;\n              vm.lastSpo2 = vm.lastSpo2Compute;\n              vm.loaded = true;\n            }\n          })\n          .catch(function (error) {\n            console.log(\"AXIOS ERROR: \" + error);\n          })\n          .finally(() => (this.loading = false));\n        await this.$nextTick();\n      }\n    },\n    beforeDestroy() {\n      clearInterval(this.timer),\n        (this.pulseData = []),\n        (this.spo2Data = []),\n        (this.pulseChartData = null),\n        (this.spo2ChartData = null);\n    },\n  },\n};\n</script>\n\n<style>\n.notOkPulseOxy {\n  color: red;\n}\n.small {\n  max-height: 220px;\n  margin: 20px 0 20px;\n}\n.pulseColor {\n  margin: 20px 0 20px;\n  align-self: stretch;\n  background-color: #36d7e7;\n  color: white;\n}\n.spo2Color {\n  margin: 20px 0 20px;\n  align-self: stretch;\n  background-color: #36c1e7;\n  color: white;\n}\n.bigFont {\n  font-size: 64px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}