{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1599147042619},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n\n        <button :class=\"classArchiveButton()\" @click=\"toggleArchive\">\n          Archiv\n        </button>\n      </h1>\n      <div v-if=\"!archive\">\n        <ul v-if=\"activeAmbulances.length\">\n          <div v-if=\"ambulancesWithETAs.length\">\n            <li\n              v-for=\"ambulance in ambulancesWithETAs\"\n              v-bind:key=\"ambulance.identifier\"\n            >\n              <div v-if=\"ambulance.patientId\">\n                <p>\n                  <button @click=\"selectRTW(ambulance)\">\n                    <img src=\"../assets/ambulance.png\" width=\"100\" />\n                    <br />\n                    <br />\n                    RTW - {{ ambulance.identifier }}\n                    <br />\n                    ETA: {{ ambulance.eta }}\n                    <br />\n                    Informationen: {{ ambulance.miscellaneous }}\n                    <br />\n                    <ul>\n                      <li\n                        v-for=\"(value, name) in ambulance.abcde_schema\"\n                        v-bind:key=\"name\"\n                      >\n                        <div class=\"text-center\">\n                          <button\n                            v-if=\"value === false\"\n                            disabled\n                            pill\n                            class=\"rounded-circle notOkABCDE\"\n                          >\n                            {{ name }}\n                          </button>\n                          <button\n                            v-else-if=\"value === true\"\n                            disabled\n                            pill\n                            class=\"rounded-circle okABCDE\"\n                          >\n                            {{ name }}\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </button>\n                </p>\n              </div>\n            </li>\n          </div>\n          <div v-else class=\"d-flex justify-content-center\">\n            <div\n              class=\"spinner-border\"\n              style=\"position: fixed; top: 50%;\"\n              role=\"status\"\n            ></div>\n            <div style=\"position: fixed; top: 55%;\">{{ stateMessage }}</div>\n          </div>\n        </ul>\n        <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n      </div>\n      <div v-else>\n        <ul v-if=\"inactiveAmbulances.length\">\n          <li\n            v-for=\"ambulance in inactiveAmbulances\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <p>\n              <button @click=\"selectRTW(ambulance)\">\n                <img src=\"../assets/ambulance.png\" width=\"100\" />\n                <br />\n                <br />\n                RTW - {{ ambulance.identifier }}\n                <br />\n                Informationen: {{ ambulance.miscellaneous }}\n                <br />\n              </button>\n            </p>\n          </li>\n        </ul>\n        <h3 v-else>... Aktuell sind keine RTW's im Archiv ...</h3>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nvar axios = require(\"axios\");\n\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    activeAmbulances: Array,\n    inactiveAmbulances: Array\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: [],\n    rtwLocations: [`[${8.487255}, ${49.492427}]`],\n    stateMessage: \"Berechne geschätzte Ankunftszeit\",\n    archive: false\n  }),\n  methods: {\n    classArchiveButton: function() {\n      if (this.archive) {\n        return \"btn btn-success\";\n      } else {\n        return \"btn btn-secondary\";\n      }\n    },\n    toggleArchive: function() {\n      this.archive = !this.archive;\n    },\n    computeETA: function(currentRtw) {\n      let request = new XMLHttpRequest();\n      if (this.rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          \"5b3ce3597851110001cf624808d1f959df534ac3adc0620256a68ec7\" //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              currentRtw.eta = context.secToTime(\n                JSON.parse(request.responseText).durations[1][0]\n              );\n              // After computing the ETA, the patient miscellaneous informations (50 first characters of the miscellaneous)\n              // and ABCDE Schema is fetched from the server.\n              let config = {\n                method: \"get\",\n                url:\n                  \"https://134.155.48.211:3000/patient/findByAmbulanceId/\" +\n                  currentRtw.ambulanceId\n              };\n              var patientData = {};\n              axios(config)\n                .then(response => {\n                  if (response.data.statusCode === \"10000\") {\n                    patientData = {\n                      patientId: response.data.data.patientId,\n                      miscellaneous: response.data.data.miscellaneous.slice(\n                        0,\n                        50\n                      ),\n                      abcde_schema: {\n                        A: response.data.data.AIsSelected,\n                        B: response.data.data.BIsSelected,\n                        C: response.data.data.CIsSelected,\n                        D: response.data.data.DIsSelected,\n                        E: response.data.data.EIsSelected\n                      }\n                    };\n                  }\n                })\n                .catch(error => {\n                  console.log(\"AXIOS PATIENT DATA ERROR: \" + error);\n                })\n                .then(() => {\n                  currentRtw.patientId = patientData.patientId;\n                  currentRtw.miscellaneous = patientData.miscellaneous;\n                  currentRtw.abcde_schema = patientData.abcde_schema;\n                  context.ambulancesWithETAs.push(currentRtw);\n                });\n            } else {\n              currentRtw.eta = \"Fehler bei Routen Schnittstelle\";\n              context.ambulancesWithETAs.push(currentRtw);\n            }\n          }\n        };\n        const body = `{\"locations\": [${this.rtwLocations}]}`;\n        request.send(body);\n      }\n    },\n    secToTime: function(etaInSec) {\n      if (!isNaN(etaInSec)) {\n        const rtwTimeReductionFactor = 0.734;\n        etaInSec = etaInSec * rtwTimeReductionFactor;\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    },\n    getGnssData: function() {\n      for (var rtw of this.ambulances) {\n        if (rtw.ambulanceId && rtw.patientId != 0) {\n          let config = {\n            method: \"get\",\n            url:\n              \"https://134.155.48.211:3000/ambulance/findGnssByAmbulanceId/\" +\n              rtw.ambulanceId\n          };\n\n          axios(config)\n            .then(response => {\n              if (response.data.statusCode === \"10000\") {\n                this.rtwLocations.splice(\n                  1,\n                  1,\n                  `[${response.data.data.longitude}, ${response.data.data.latitude}]`\n                );\n                var currentRtw;\n                for (var c of this.ambulances) {\n                  if (response.data.data.ambulanceId === c.ambulanceId) {\n                    currentRtw = c;\n                  }\n                }\n                currentRtw.long = response.data.data.longitude;\n                currentRtw.lat = response.data.data.latitude;\n                this.computeETA(currentRtw);\n              }\n            })\n            .catch(error => {\n              var errorId = JSON.stringify(error.config.url.slice(-1));\n              console.log(\n                \"Keine GNSS Daten verfügbar für AmbulanceID: \" + errorId\n              );\n              this.stateMessage = JSON.stringify(error.message);\n\n              //add I\n              for (var ea of this.ambulances) {\n                if (`\"${ea.ambulanceId}\"` === errorId) {\n                  ea.eta = \"Keine GNSS Daten verfügbar\";\n                  this.ambulancesWithETAs.push(ea);\n                  this.$forceUpdate();\n                }\n              }\n            });\n        }\n      }\n    }\n  },\n  mounted: function() {\n    this.getGnssData();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: green;\n  color: white;\n}\n.notOkABCDE {\n  background-color: red;\n  color: white;\n}\n</style>\n"],"sourceRoot":"src/components"}]}