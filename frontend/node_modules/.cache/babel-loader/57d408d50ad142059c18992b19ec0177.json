{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1597668567791},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvVXNlcnMvbWFyY2d1bGRuZXIvR2l0SHViL2VtYy1kYXRhLXNlcnZlci9mcm9udGVuZC90cmF1bWEtcm9vbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgYXhpb3MgPSByZXF1aXJlKCJheGlvcyIpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJSdHdTZWxlY3Rpb24iLAogIHByb3BzOiB7CiAgICBzZWxlY3RSVFc6IEZ1bmN0aW9uLAogICAgYW1idWxhbmNlczogQXJyYXkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhcnJpdmFsVGltZXM6IFtdLAogICAgICBhbWJ1bGFuY2VzV2l0aEVUQXM6IFtdLAogICAgICBhbWJ1bGFuY2VzV2l0aE5vRVRBOiBbXSwKICAgICAgcnR3TG9jYXRpb25zOiBbIlsiLmNvbmNhdCg4LjQ4NzI1NSwgIiwgIiwgNDkuNDkyNDI3LCAiXSIpXSwKICAgICAgc3RhdGVNZXNzYWdlOiAiQmVyZWNobmUgZ2VzY2jDpHR6dGUgQW5rdW5mdHN6ZWl0IgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNvbXB1dGVFVEE6IGZ1bmN0aW9uIGNvbXB1dGVFVEEoY3VycmVudFJ0dykgewogICAgICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwoKICAgICAgaWYgKHRoaXMucnR3TG9jYXRpb25zLmxlbmd0aCA+IDEpIHsKICAgICAgICByZXF1ZXN0Lm9wZW4oIlBPU1QiLCAiaHR0cHM6Ly9hcGkub3BlbnJvdXRlc2VydmljZS5vcmcvdjIvbWF0cml4L2RyaXZpbmctY2FyIik7CiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCJBY2NlcHQiLCAiYXBwbGljYXRpb24vanNvbiwgYXBwbGljYXRpb24vZ2VvK2pzb24sIGFwcGxpY2F0aW9uL2dweCt4bWwsIGltZy9wbmc7IGNoYXJzZXQ9dXRmLTgiKTsKICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtVHlwZSIsICJhcHBsaWNhdGlvbi9qc29uIik7CiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCJBdXRob3JpemF0aW9uIiwgIjViM2NlMzU5Nzg1MTExMDAwMWNmNjI0ODZjZDc0NmRiZmE0MDQxODdiNWZlZTM2MzI4OWU4ZmVkIiAvL0FQSSBLZXkKICAgICAgICApOwogICAgICAgIHZhciBjb250ZXh0ID0gdGhpczsKCiAgICAgICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAocmVxdWVzdC5yZWFkeVN0YXRlID09PSA0KSB7CiAgICAgICAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgY3VycmVudFJ0dy5ldGEgPSBjb250ZXh0LnNlY1RvVGltZShKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KS5kdXJhdGlvbnNbMV1bMF0pOwogICAgICAgICAgICAgIGNvbnRleHQuYW1idWxhbmNlc1dpdGhFVEFzLnB1c2goY3VycmVudFJ0dyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY3VycmVudFJ0dy5ldGEgPSAiRmVobGVyIGJlaSBSb3V0ZW4gU2Nobml0dHN0ZWxsZSI7CiAgICAgICAgICAgICAgY29udGV4dC5hbWJ1bGFuY2VzV2l0aEVUQXMucHVzaChjdXJyZW50UnR3KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH07CgogICAgICAgIHZhciBib2R5ID0gIntcImxvY2F0aW9uc1wiOiBbIi5jb25jYXQodGhpcy5ydHdMb2NhdGlvbnMsICJdfSIpOwogICAgICAgIHJlcXVlc3Quc2VuZChib2R5KTsKICAgICAgfQogICAgfSwKICAgIHNlY1RvVGltZTogZnVuY3Rpb24gc2VjVG9UaW1lKGV0YUluU2VjKSB7CiAgICAgIGlmICghaXNOYU4oZXRhSW5TZWMpKSB7CiAgICAgICAgdmFyIHJ0d1RpbWVSZWR1Y3Rpb25GYWN0b3IgPSAwLjczNDsKICAgICAgICBldGFJblNlYyA9IGV0YUluU2VjICogcnR3VGltZVJlZHVjdGlvbkZhY3RvcjsKICAgICAgICB2YXIgc2Vjb25kcyA9IE1hdGguZmxvb3IoZXRhSW5TZWMgJSA2MCkudG9TdHJpbmcoKTsKICAgICAgICB2YXIgbWludXRlcyA9IE1hdGguZmxvb3IoZXRhSW5TZWMgLyA2MCkudG9TdHJpbmcoKTsKCiAgICAgICAgaWYgKHNlY29uZHMubGVuZ3RoID09PSAxKSB7CiAgICAgICAgICBzZWNvbmRzID0gIjAiICsgc2Vjb25kczsKICAgICAgICB9CgogICAgICAgIHJldHVybiBtaW51dGVzICsgIiBNaW51dGVuICIgKyBzZWNvbmRzICsgIiBTZWt1bmRlbiI7CiAgICAgIH0KICAgIH0sCiAgICBnZXRHbnNzRGF0YTogZnVuY3Rpb24gZ2V0R25zc0RhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbWJ1bGFuY2VzKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHJ0dyA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIGlmIChydHcuYW1idWxhbmNlSWQpIHsKICAgICAgICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICAgICAgICBtZXRob2Q6ICJnZXQiLAogICAgICAgICAgICAgIHVybDogImh0dHBzOi8vMTM0LjE1NS40OC4yMTE6MzAwMC9hbWJ1bGFuY2UvZmluZEduc3NCeUFtYnVsYW5jZUlkLyIgKyBydHcuYW1idWxhbmNlSWQKICAgICAgICAgICAgfTsKICAgICAgICAgICAgYXhpb3MoY29uZmlnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1c0NvZGUgPT09ICIxMDAwMCIpIHsKICAgICAgICAgICAgICAgIF90aGlzLnJ0d0xvY2F0aW9ucy5zcGxpY2UoMSwgMSwgIlsiLmNvbmNhdChyZXNwb25zZS5kYXRhLmRhdGEubG9uZ2l0dWRlLCAiLCAiKS5jb25jYXQocmVzcG9uc2UuZGF0YS5kYXRhLmxhdGl0dWRlLCAiXSIpKTsKCiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFJ0dzsKCiAgICAgICAgICAgICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKF90aGlzLmFtYnVsYW5jZXMpLAogICAgICAgICAgICAgICAgICAgIF9zdGVwMjsKCiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgICAgICAgICAgIHZhciBjID0gX3N0ZXAyLnZhbHVlOwoKICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5kYXRhLmFtYnVsYW5jZUlkID09PSBjLmFtYnVsYW5jZUlkKSB7CiAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50UnR3ID0gYzsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzLmNvbXB1dGVFVEEoY3VycmVudFJ0dyk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICB2YXIgZXJyb3JJZCA9IEpTT04uc3RyaW5naWZ5KGVycm9yLmNvbmZpZy51cmwuc2xpY2UoLTEpKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiTm8gR05TUyBEYXRhIGZvciBBbWJ1bGFuY2VJRDogIiArIGVycm9ySWQpOwogICAgICAgICAgICAgIF90aGlzLnN0YXRlTWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KGVycm9yLm1lc3NhZ2UpOyAvL2FkZCBJCgogICAgICAgICAgICAgIHZhciBfaXRlcmF0b3IzID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoX3RoaXMuYW1idWxhbmNlcyksCiAgICAgICAgICAgICAgICAgIF9zdGVwMzsKCiAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICAgIHZhciBlYSA9IF9zdGVwMy52YWx1ZTsKCiAgICAgICAgICAgICAgICAgIGlmICgiXCIiLmNvbmNhdChlYS5hbWJ1bGFuY2VJZCwgIlwiIikgPT09IGVycm9ySWQpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiVEVTVCIpOwogICAgICAgICAgICAgICAgICAgIGVhLmV0YSA9ICJLZWluZSBHTlNTIERhdGVuIHZlcmbDvGdiYXIiOwoKICAgICAgICAgICAgICAgICAgICBfdGhpcy5hbWJ1bGFuY2VzV2l0aEVUQXMucHVzaChlYSk7CgogICAgICAgICAgICAgICAgICAgIF90aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IzLmUoZXJyKTsKICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0R25zc0RhdGEoKTsKICB9Cn07"},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n      </h1>\n      <ul v-if=\"ambulances.length\">\n        <div v-if=\"ambulancesWithETAs.length\">\n          <li\n            v-for=\"ambulance in ambulancesWithETAs\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <p>\n              <button @click=\"selectRTW(ambulance)\">\n                <img src=\"../assets/ambulance.png\" width=\"100\" />\n                <br />\n                <br />\n                RTW - {{ ambulance.identifier }}\n                <br />\n                ETA: {{ ambulance.eta }}\n                <br />\n                Diagnose: {{ ambulance.diagnosis }}\n                <br />\n                <ul>\n                  <li\n                    v-for=\"(value, name) in ambulance.abcde_schema\"\n                    v-bind:key=\"name\"\n                  >\n                    <div class=\"text-center\">\n                      <button\n                        v-if=\"value === true\"\n                        disabled\n                        pill\n                        class=\"rounded-circle notOkABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                      <button\n                        v-else-if=\"value === false\"\n                        disabled\n                        pill\n                        class=\"rounded-circle okABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                    </div>\n                  </li>\n                </ul>\n              </button>\n            </p>\n          </li>\n        </div>\n        <div v-else class=\"d-flex justify-content-center\">\n          <div\n            class=\"spinner-border\"\n            style=\"position: fixed; top: 50%;\"\n            role=\"status\"\n          ></div>\n          <div style=\"position: fixed; top: 55%;\">{{ stateMessage }}</div>\n        </div>\n      </ul>\n      <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nvar axios = require(\"axios\");\n\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    ambulances: Array\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: [],\n    rtwLocations: [`[${8.487255}, ${49.492427}]`],\n    stateMessage: \"Berechne geschätzte Ankunftszeit\"\n  }),\n  methods: {\n    computeETA: function(currentRtw) {\n      let request = new XMLHttpRequest();\n      if (this.rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          \"5b3ce3597851110001cf62486cd746dbfa404187b5fee363289e8fed\" //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              currentRtw.eta = context.secToTime(\n                JSON.parse(request.responseText).durations[1][0]\n              );\n              context.ambulancesWithETAs.push(currentRtw);\n            } else {\n              currentRtw.eta = \"Fehler bei Routen Schnittstelle\";\n              context.ambulancesWithETAs.push(currentRtw);\n            }\n          }\n        };\n        const body = `{\"locations\": [${this.rtwLocations}]}`;\n        request.send(body);\n      }\n    },\n    secToTime: function(etaInSec) {\n      if (!isNaN(etaInSec)) {\n        const rtwTimeReductionFactor = 0.734;\n        etaInSec = etaInSec * rtwTimeReductionFactor;\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    },\n    getGnssData: function() {\n      for (var rtw of this.ambulances) {\n        if (rtw.ambulanceId) {\n          let config = {\n            method: \"get\",\n            url:\n              \"https://134.155.48.211:3000/ambulance/findGnssByAmbulanceId/\" +\n              rtw.ambulanceId\n          };\n\n          axios(config)\n            .then(response => {\n              if (response.data.statusCode === \"10000\") {\n                this.rtwLocations.splice(\n                  1,\n                  1,\n                  `[${response.data.data.longitude}, ${response.data.data.latitude}]`\n                );\n                var currentRtw;\n                for (var c of this.ambulances) {\n                  if (response.data.data.ambulanceId === c.ambulanceId) {\n                    currentRtw = c;\n                  }\n                }\n                this.computeETA(currentRtw);\n              }\n            })\n            .catch(error => {\n              var errorId = JSON.stringify(error.config.url.slice(-1));\n              console.log(\"No GNSS Data for AmbulanceID: \" + errorId);\n              this.stateMessage = JSON.stringify(error.message);\n\n              //add I\n              for (var ea of this.ambulances) {\n                if (`\"${ea.ambulanceId}\"` === errorId) {\n                  console.log(\"TEST\");\n                  ea.eta = \"Keine GNSS Daten verfügbar\";\n                  this.ambulancesWithETAs.push(ea);\n                  this.$forceUpdate();\n                }\n              }\n            });\n        }\n      }\n    }\n  },\n  mounted: function() {\n    this.getGnssData();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: lightgreen;\n}\n.notOkABCDE {\n  background-color: lightcoral;\n}\n</style>\n"],"sourceRoot":"src/components"}]}