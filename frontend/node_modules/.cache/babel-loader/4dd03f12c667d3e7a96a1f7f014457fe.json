{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1597225158878},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvVXNlcnMvbWFyY2d1bGRuZXIvR2l0SHViL2VtYy1kYXRhLXNlcnZlci9mcm9udGVuZC90cmF1bWEtcm9vbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUnR3U2VsZWN0aW9uIiwKICBwcm9wczogewogICAgc2VsZWN0UlRXOiBGdW5jdGlvbiwKICAgIGFtYnVsYW5jZXM6IEFycmF5CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXJyaXZhbFRpbWVzOiBbXSwKICAgICAgYW1idWxhbmNlc1dpdGhFVEFzOiBbXSwKICAgICAgYW1idWxhbmNlc1dpdGhOb0VUQTogW10gLy9ydHdMb2NhdGlvbnM6IFtdCgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNvbXB1dGVBbGxFVEFzOiBmdW5jdGlvbiBjb21wdXRlQWxsRVRBcygpIHsKICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgdmFyIHJ0d0xvY2F0aW9ucyA9IFtdOwogICAgICB2YXIgaW5kZXggPSAwOyAvL1Byb3RvdHlwaW5nOyBjaGFuZ2UgcnR3TGlzdCB0byB0aGUgcmVwb25zZSBvYmplY3Q7IGZpcnN0IGl0ZW0gaW4gdGhpcyBsaXN0IGhhcyB0byBiZSB0aGUgVU1NIGFkZHJlc3MKICAgICAgLy9FeGNlcHRpb24gSGFuZGxpbmc6IElmIG5vIEdOU1MgZGF0YSBpcyBvYnRhaW5lZCwgZGlzcGxheSBydHcgbGlzdCB3aXRob3V0IEVUQQoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuYW1idWxhbmNlcyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBydHcgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJSVFc6ICIgKyBKU09OLnN0cmluZ2lmeShydHcpKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJpbmRleDogIiArIGluZGV4KTsgLy9Gb3IgZWFjaCBSVFcgbWFrZSBhIGdldCByZXF1ZXN0IHRvIG9idGlhbiBHTlNTIGRhdGEgYW5kIGFkZCB0byB0aGUgcnR3TG9jYXRpb25zIFtdCgogICAgICAgICAgaWYgKCFpc05hTihydHcuZ25zc1Bvc2l0aW9uLmxvbmcpICYmICFpc05hTihydHcuZ25zc1Bvc2l0aW9uLmxhdCkpIHsKICAgICAgICAgICAgcnR3TG9jYXRpb25zLnB1c2goIlsiLmNvbmNhdChydHcuZ25zc1Bvc2l0aW9uLmxvbmcsICIsICIpLmNvbmNhdChydHcuZ25zc1Bvc2l0aW9uLmxhdCwgIl0iKSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmFtYnVsYW5jZXNXaXRoTm9FVEEucHVzaChpbmRleCk7CiAgICAgICAgICB9CgogICAgICAgICAgaW5kZXgrKzsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2coInJ0d2xvY2F0aW9uczogIiArIHJ0d0xvY2F0aW9ucyk7CgogICAgICBpZiAocnR3TG9jYXRpb25zLmxlbmd0aCA+IDEpIHsKICAgICAgICByZXF1ZXN0Lm9wZW4oIlBPU1QiLCAiaHR0cHM6Ly9hcGkub3BlbnJvdXRlc2VydmljZS5vcmcvdjIvbWF0cml4L2RyaXZpbmctY2FyIik7CiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCJBY2NlcHQiLCAiYXBwbGljYXRpb24vanNvbiwgYXBwbGljYXRpb24vZ2VvK2pzb24sIGFwcGxpY2F0aW9uL2dweCt4bWwsIGltZy9wbmc7IGNoYXJzZXQ9dXRmLTgiKTsKICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtVHlwZSIsICJhcHBsaWNhdGlvbi9qc29uIik7CiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCJBdXRob3JpemF0aW9uIiwgIjViM2NlMzU5Nzg1MTExMDAwMWNmNjI0ODAxZTk5NTQwMjk2MzQyNjhhZDUzMzZhYTNlYjU1MTQwIiAvL0FQSSBLZXkKICAgICAgICApOwogICAgICAgIHZhciBjb250ZXh0ID0gdGhpczsKCiAgICAgICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAocmVxdWVzdC5yZWFkeVN0YXRlID09PSA0KSB7CiAgICAgICAgICAgIGNvbnRleHQuYXJyaXZhbFRpbWVzID0gSlNPTi5wYXJzZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCkuZHVyYXRpb25zWzBdOwogICAgICAgICAgICBjb250ZXh0Lm1hcEVUQXMoKTsKICAgICAgICAgICAgY29uc29sZS5sb2coIlN0YXR1czoiLCByZXF1ZXN0LnN0YXR1cyk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJIZWFkZXJzOiIsIHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiQm9keToiLCByZXF1ZXN0LnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgdmFyIGJvZHkgPSAie1wibG9jYXRpb25zXCI6IFsiLmNvbmNhdChydHdMb2NhdGlvbnMsICJdfSIpOwogICAgICAgIHJlcXVlc3Quc2VuZChib2R5KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmFtYnVsYW5jZXMgPSBbXTsKICAgICAgfQogICAgfSwKICAgIG1hcEVUQXM6IGZ1bmN0aW9uIG1hcEVUQXMoKSB7CiAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbWJ1bGFuY2VzV2l0aE5vRVRBKSwKICAgICAgICAgIF9zdGVwMjsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBhSW5kZXggPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICB0aGlzLmFycml2YWxUaW1lcy5zcGxpY2UoYUluZGV4LCAwLCAiTm8gR05TUyBhdmFpbGFibGUiKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICB9CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYW1idWxhbmNlcy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICghdGhpcy5hbWJ1bGFuY2VzV2l0aE5vRVRBLmluY2x1ZGVzKGkpKSB7CiAgICAgICAgICB0aGlzLmFtYnVsYW5jZXNbaV0uZXRhID0gdGhpcy5zZWNUb1RpbWUodGhpcy5hcnJpdmFsVGltZXNbaV0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmFtYnVsYW5jZXNbaV0uZXRhID0gIk5pY2h0IGJlcmVjaGVuYmFyIGF1ZmdydW5kIGZlaGxlbmRlciBHTlNTIERhdGVuIjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuYW1idWxhbmNlc1dpdGhFVEFzID0gdGhpcy5hbWJ1bGFuY2VzOwogICAgfSwKICAgIHNlY1RvVGltZTogZnVuY3Rpb24gc2VjVG9UaW1lKGV0YUluU2VjKSB7CiAgICAgIGNvbnNvbGUubG9nKCJzZWN0b1RpbWU6ICIgKyBldGFJblNlYyk7CgogICAgICBpZiAoIWlzTmFOKGV0YUluU2VjKSkgewogICAgICAgIHZhciBzZWNvbmRzID0gTWF0aC5mbG9vcihldGFJblNlYyAlIDYwKS50b1N0cmluZygpOwogICAgICAgIHZhciBtaW51dGVzID0gTWF0aC5mbG9vcihldGFJblNlYyAvIDYwKS50b1N0cmluZygpOwoKICAgICAgICBpZiAoc2Vjb25kcy5sZW5ndGggPT09IDEpIHsKICAgICAgICAgIHNlY29uZHMgPSAiMCIgKyBzZWNvbmRzOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG1pbnV0ZXMgKyAiIE1pbnV0ZW4gIiArIHNlY29uZHMgKyAiIFNla3VuZGVuIjsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY29tcHV0ZUFsbEVUQXMoKTsKICB9Cn07"},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n      </h1>\n      <ul v-if=\"ambulances.length\">\n        <div v-if=\"ambulancesWithETAs.length\">\n          <li\n            v-for=\"(ambulance, index) in ambulances\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <p v-if=\"index > 0\">\n              <button @click=\"selectRTW(ambulance)\">\n                <img src=\"../assets/ambulance.png\" width=\"100\" />\n                <br />\n                <br />\n                RTW - {{ ambulance.identifier }}\n                <br />\n                ETA: {{ ambulance.eta }}\n                <br />\n                Diagnose: {{ ambulance.diagnosis }}\n                <br />\n                <ul>\n                  <li\n                    v-for=\"(value, name) in ambulance.abcde_schema\"\n                    v-bind:key=\"name\"\n                  >\n                    <div class=\"text-center\">\n                      <button\n                        v-if=\"value === true\"\n                        disabled\n                        pill\n                        class=\"rounded-circle notOkABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                      <button\n                        v-else-if=\"value === false\"\n                        disabled\n                        pill\n                        class=\"rounded-circle okABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                    </div>\n                  </li>\n                </ul>\n              </button>\n            </p>\n          </li>\n        </div>\n        <div v-else class=\"d-flex justify-content-center\">\n          <div\n            class=\"spinner-border\"\n            style=\"position: fixed; top: 50%;\"\n            role=\"status\"\n          ></div>\n          <div style=\"position: fixed; top: 55%;\">\n            Berechne geschätzte Ankunftszeit\n          </div>\n        </div>\n      </ul>\n      <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    ambulances: Array\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: []\n    //rtwLocations: []\n  }),\n  methods: {\n    computeAllETAs: function() {\n      let request = new XMLHttpRequest();\n      var rtwLocations = [];\n      var index = 0;\n      //Prototyping; change rtwList to the reponse object; first item in this list has to be the UMM address\n      //Exception Handling: If no GNSS data is obtained, display rtw list without ETA\n      for (var rtw of this.ambulances) {\n        console.log(\"RTW: \" + JSON.stringify(rtw));\n        console.log(\"index: \" + index);\n        //For each RTW make a get request to obtian GNSS data and add to the rtwLocations []\n        if (!isNaN(rtw.gnssPosition.long) && !isNaN(rtw.gnssPosition.lat)) {\n          rtwLocations.push(\n            `[${rtw.gnssPosition.long}, ${rtw.gnssPosition.lat}]`\n          );\n        } else {\n          this.ambulancesWithNoETA.push(index);\n        }\n        index++;\n      }\n      console.log(\"rtwlocations: \" + rtwLocations);\n      if (rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          \"5b3ce3597851110001cf624801e9954029634268ad5336aa3eb55140\" //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            context.arrivalTimes = JSON.parse(\n              request.responseText\n            ).durations[0];\n            context.mapETAs();\n            console.log(\"Status:\", request.status);\n            console.log(\"Headers:\", request.getAllResponseHeaders());\n            console.log(\"Body:\", request.responseText);\n          }\n        };\n        const body = `{\"locations\": [${rtwLocations}]}`;\n        request.send(body);\n      } else {\n        this.ambulances = [];\n      }\n    },\n    mapETAs: function() {\n      for (var aIndex of this.ambulancesWithNoETA) {\n        this.arrivalTimes.splice(aIndex, 0, \"No GNSS available\");\n      }\n\n      for (var i = 0; i < this.ambulances.length; i++) {\n        if (!this.ambulancesWithNoETA.includes(i)) {\n          this.ambulances[i].eta = this.secToTime(this.arrivalTimes[i]);\n        } else {\n          this.ambulances[i].eta =\n            \"Nicht berechenbar aufgrund fehlender GNSS Daten\";\n        }\n      }\n\n      this.ambulancesWithETAs = this.ambulances;\n    },\n    secToTime: function(etaInSec) {\n      console.log(\"sectoTime: \" + etaInSec);\n      if (!isNaN(etaInSec)) {\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    }\n  },\n  mounted: function() {\n    this.computeAllETAs();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: lightgreen;\n}\n.notOkABCDE {\n  background-color: lightcoral;\n}\n</style>\n"],"sourceRoot":"src/components"}]}