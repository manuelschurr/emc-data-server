{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/pulseOxy.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/pulseOxy.vue","mtime":1599144441034},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["pulseOxy.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row align-items-start\" v-if=\"selectedElements < 2\">\n      <div class=\"col-12\">\n        <form class=\"form-inline\" style=\"align-items: center;\">\n          <div class=\"col-9\">\n            <puls-oxy-line class=\"small\" v-if=\"loaded\" :chart-data=\"pulseChartData\" />\n          </div>\n          <div v-if=\"lastPulse > 120 || lastPulse < 50\" class=\"col-3 notOkPulseOxyColor\">\n            <br />\n            <b>Pulse</b>\n            <br />\n            <div v-if=\"loaded\">\n              <span class=\"bigFont\">{{ lastPulse }}</span>\n            </div>\n            <svg\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              class=\"bi bi-heart\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\n              />\n            </svg>\n            <br />PR/min\n          </div>\n          <div v-else class=\"col-3 pulseColor\">\n            <br />\n            <b>Pulse</b>\n            <br />\n            <div v-if=\"loaded\">\n              {{ this.pulseSoundPlayed = false }}\n              <span class=\"bigFont\">{{ lastPulse }}</span>\n            </div>\n            <svg\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              class=\"bi bi-heart\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\n              />\n            </svg>\n            <br />PR/min\n          </div>\n        </form>\n      </div>\n      <div class=\"col-12\">\n        <form class=\"form-inline\" style=\"align-items: center;\">\n          <div class=\"col-9\">\n            <puls-oxy-line class=\"small\" v-if=\"loaded\" :chart-data=\"spo2ChartData\" />\n          </div>\n          <div v-if=\"lastSpo2 < 90\" class=\"col-3 notOkPulseOxyColor\">\n            <br />\n            <b>\n              SpO<sub>2</sub>\n            </b>\n            <br />\n            <div v-if=\"loaded\">\n              <span class=\"bigFont\">{{ lastSpo2 }}</span>\n            </div>O<sub>2</sub>\n            <br />SpO<sub>2</sub>%\n          </div>\n          <div v-else class=\"col-3 spo2Color\">\n            <br />\n            <b>\n              SpO<sub>2</sub>\n            </b>\n            <br />\n            <div v-if=\"loaded\">\n              {{ this.spo2SoundPlayed = false }}\n              <span class=\"bigFont\">{{ lastSpo2 }}</span>\n            </div>O<sub>2</sub>\n            <br />SpO<sub>2</sub>%\n          </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"row\" v-else>\n      <div v-if=\"lastPulse > 120 || lastPulse < 50\" class=\"col notOkPulseOxyColor\">\n        <br />\n        <b>Pulse</b>\n        <br />\n        <div v-if=\"loaded\">\n          <span class=\"bigFont\">{{ lastPulse }}</span>\n        </div>\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          class=\"bi bi-heart\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\n          />\n        </svg>\n        <br />PR/min\n      </div>\n      <div v-else class=\"col pulseColor\">\n        <br />\n        <b>Pulse</b>\n        <br />\n        <div v-if=\"loaded\">\n          {{ this.pulseSoundPlayed = false }}\n          <span class=\"bigFont\">{{ lastPulse }}</span>\n        </div>\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          class=\"bi bi-heart\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\n          />\n        </svg>\n        <br />PR/min\n      </div>\n      <div v-if=\"lastSpo2 < 90\" class=\"col notOkPulseOxyColor\">\n        <br />\n        <b>\n          SpO<sub>2</sub>\n        </b>\n        <br />\n        <div v-if=\"loaded\">\n          <span class=\"bigFont\">{{ lastSpo2 }}</span>\n        </div>O<sub>2</sub>\n        <br />SpO<sub>2</sub>%\n      </div>\n      <div v-else class=\"col spo2Color\">\n        <br />\n        <b>\n          SpO<sub>2</sub>\n        </b>\n        <br />\n        <div v-if=\"loaded\">\n          {{ this.spo2SoundPlayed = false }}\n          <span class=\"bigFont\">{{ lastSpo2 }}</span>\n        </div>O<sub>2</sub>\n        <br />SpO<sub>2</sub>%\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PulsOxyLine from \"./pulseOxyLine.vue\";\nconst axios = require(\"axios\");\n\nexport default {\n  name: \"LineChartContainer\",\n  components: { PulsOxyLine },\n  data() {\n    return {\n      loaded: false,\n      pulseSoundPlayed: false,\n      spo2SoundPlayed: false,\n      timer: \"\",\n      pulseChartData: null,\n      spo2ChartData: null,\n      pulseData: [],\n      lastPulse: \"\",\n      pulseLabels: [],\n      spo2Data: [],\n      lastSpo2: \"\",\n      spo2Labels: [],\n    };\n  },\n  props: {\n    patientId: Number,\n    selectedElements: Number,\n  },\n  // Fill the chart with data and display it\n  mounted() {\n    this.fillData();\n  },\n  // Refreshes the PulseOxy chart every second with the data from the server.\n  created() {\n    this.timer = setInterval(this.fillData, 1000);\n  },\n  // Compute the last number of the pulse and the Spo2 rate by getting the last element of the data arrays.\n  computed: {\n    lastPulseCompute() {\n      var lastPulseData = this.pulseData[this.pulseData.length - 1];\n      this.$root.$emit(\"lastPulseData\", lastPulseData);\n      return lastPulseData;\n    },\n    lastSpo2Compute() {\n      var lastSpo2Data = this.spo2Data[this.spo2Data.length - 1];\n      this.$root.$emit(\"lastSpo2Data\", lastSpo2Data);\n      return lastSpo2Data;\n    },\n  },\n  methods: {\n    // Play a warning sound when the pulse or the Spo2 rate is critical.\n    playSound() {\n      var sound = new Audio(require(\"../assets/warning_sound.mp3\"));\n      return sound.play();\n    },\n    // Request the PulseOxy data from the server and depending on whether the\n    // pulseOxy data array of the chart already has 20 entries or not,\n    // gets the last 20 entries or only gets the newest entry.\n    async fillData() {\n      var vm = this;\n      this.loading = true;\n\n      if (vm.pulseData.length < 20) {\n        // The first server request is to find the patient by the given patient ID\n        var body = \"\";\n        var config = {\n          method: \"get\",\n          url:\n            \"https://134.155.48.211:3000/patient/findByPatientId/\" +\n            vm.patientId,\n          headers: {},\n          data: body,\n        };\n\n        axios(config)\n          .then(function (responsePatient) {\n            if (responsePatient.data.statusCode === \"10000\") {\n              // When the request is successful, the new request gets all the stored data of the patient.\n              var bodySecond = \"\";\n              var configSecond = {\n                method: \"get\",\n                url:\n                  \"https://134.155.48.211:3000/patient/findPulsoxyByPatientIdAndTimestamp?patientId=\" +\n                  vm.patientId +\n                  \"&timestamp=\" +\n                  responsePatient.data.data.createdAt,\n                headers: {},\n                data: bodySecond,\n              };\n\n              axios(configSecond).then(function (responsePulseOxy) {\n                if (responsePulseOxy.data.statusCode === \"10000\") {\n                  // When the request is successful, the pulseOxy data for the two charts is filled\n                  // depending on whether there are already 20 entries in the server database or not.\n                  var i;\n                  if (responsePulseOxy.data.data.length < 20) {\n                    for (i = 0; i < responsePulseOxy.data.data.length; i++) {\n                      vm.pulseData.push(\n                        responsePulseOxy.data.data[i].pulsrate.toString()\n                      );\n                      vm.pulseLabels.push(\n                        responsePulseOxy.data.data[i].timestamp.slice(11, 19)\n                      );\n                      vm.spo2Data.push(\n                        responsePulseOxy.data.data[i].spo2.toString()\n                      );\n                      vm.spo2Labels.push(\n                        responsePulseOxy.data.data[i].timestamp.slice(11, 19)\n                      );\n                    }\n                  } else {\n                    for (\n                      i = responsePulseOxy.data.data.length - 21;\n                      i < responsePulseOxy.data.data.length;\n                      i++\n                    ) {\n                      vm.pulseData.push(\n                        responsePulseOxy.data.data[i].pulsrate.toString()\n                      );\n                      vm.pulseLabels.push(\n                        responsePulseOxy.data.data[i].timestamp.slice(11, 19)\n                      );\n                      vm.spo2Data.push(\n                        responsePulseOxy.data.data[i].spo2.toString()\n                      );\n                      vm.spo2Labels.push(\n                        responsePulseOxy.data.data[i].timestamp.slice(11, 19)\n                      );\n                    }\n                  }\n                  // Settings of the two charts with their respective data gathered before.\n                  vm.pulseChartData = {\n                    labels: vm.pulseLabels,\n                    datasets: [\n                      {\n                        label: \"Pulse\",\n                        borderColor: \"#36d7e7\",\n                        pointBackgroundColor: \"white\",\n                        borderWidth: 2,\n                        pointBorderColor: \"#36d7e7\",\n                        backgroundColor: \"transparent\",\n                        pointRadius: 0,\n                        data: vm.pulseData,\n                      },\n                    ],\n                  };\n                  vm.spo2ChartData = {\n                    labels: vm.pulseLabels,\n                    datasets: [\n                      {\n                        label: \"Spo2\",\n                        borderColor: \"#36c1e7\",\n                        pointBackgroundColor: \"white\",\n                        borderWidth: 2,\n                        pointBorderColor: \"#36c1e7\",\n                        backgroundColor: \"transparent\",\n                        pointRadius: 0,\n                        data: vm.spo2Data,\n                      },\n                    ],\n                  };\n                  vm.lastPulse = vm.lastPulseCompute;\n                  vm.lastSpo2 = vm.lastSpo2Compute;\n                  vm.loaded = true;\n                }\n              });\n            }\n          })\n          .catch(function (error) {\n            console.log(\"AXIOS ERROR: \" + error);\n          })\n          .finally(() => (this.loading = false));\n        await this.$nextTick();\n      } else {\n        // This server request is to find the patient by the given\n        // patient ID with only the latest pulse and Spo2 date.\n        var bodyPulseoxy = \"\";\n        var configPulseoxy = {\n          method: \"get\",\n          url:\n            \"https://134.155.48.211:3000/patient/findPulsoxyByPatientId/\" +\n            vm.patientId,\n          headers: {},\n          data: bodyPulseoxy,\n        };\n\n        axios(configPulseoxy)\n          .then(function (responsePulseOxy) {\n            if (responsePulseOxy.data.statusCode === \"10000\") {\n              // When the request is successful, the pulseOxy chart arrays are updated\n              // with the latest data and if the array contains more than 20 entries,\n              // the oldest entry is removed to ensure displaying the most relevant data.\n\n              if (\n                responsePulseOxy.data.data.timestamp.slice(11, 19) !=\n                vm.pulseLabels[vm.pulseLabels.length - 1]\n              ) {\n                vm.pulseData.push(\n                  responsePulseOxy.data.data.pulsrate.toString()\n                );\n                vm.pulseLabels.push(\n                  responsePulseOxy.data.data.timestamp.slice(11, 19)\n                );\n                vm.spo2Data.push(responsePulseOxy.data.data.spo2.toString());\n                vm.spo2Labels.push(\n                  responsePulseOxy.data.data.timestamp.slice(11, 19)\n                );\n              }\n\n              if (\n                vm.pulseData.length > 20 ||\n                vm.pulseLabels.length > 20 ||\n                vm.spo2Data.length > 20 ||\n                vm.spo2Labels.length > 20\n              ) {\n                vm.pulseData.shift();\n                vm.pulseLabels.shift();\n                vm.spo2Data.shift();\n                vm.spo2Labels.shift();\n              }\n              // Settings of the two charts with their respective data gathered before.\n              vm.pulseChartData = {\n                labels: vm.pulseLabels,\n                datasets: [\n                  {\n                    label: \"Pulse\",\n                    borderColor: \"#36d7e7\",\n                    pointBackgroundColor: \"white\",\n                    borderWidth: 2,\n                    pointBorderColor: \"#36d7e7\",\n                    backgroundColor: \"transparent\",\n                    pointRadius: 0,\n                    data: vm.pulseData,\n                  },\n                ],\n              };\n              vm.spo2ChartData = {\n                labels: vm.pulseLabels,\n                datasets: [\n                  {\n                    label: \"Spo2\",\n                    borderColor: \"#36c1e7\",\n                    pointBackgroundColor: \"white\",\n                    borderWidth: 2,\n                    pointBorderColor: \"#36c1e7\",\n                    backgroundColor: \"transparent\",\n                    pointRadius: 0,\n                    data: vm.spo2Data,\n                  },\n                ],\n              };\n              vm.lastPulse = vm.lastPulseCompute;\n              vm.lastSpo2 = vm.lastSpo2Compute;\n              vm.loaded = true;\n            }\n          })\n          .catch(function (error) {\n            console.log(\"AXIOS ERROR: \" + error);\n          })\n          .finally(() => (vm.loading = false));\n        await vm.$nextTick();\n      }\n      if (!vm.pulseSoundPlayed && (vm.lastPulse > 120 || vm.lastPulse < 50)) {\n        vm.playSound();\n        vm.pulseSoundPlayed = true;\n      }\n      if (!vm.spo2SoundPlayed && vm.lastSpo2 < 90) {\n        vm.playSound();\n        vm.spo2SoundPlayed = true; \n      }\n    },\n    // When the PulseOxy component is deactivated, the data is cleared and the refreshing timer is stopped.\n    beforeDestroy() {\n      clearInterval(this.timer),\n        (this.pulseData = []),\n        (this.spo2Data = []),\n        (this.pulseChartData = null),\n        (this.spo2ChartData = null);\n    },\n  },\n};\n</script>\n\n<style>\n.notOkPulseOxyColor {\n  margin: 20px 0 20px;\n  align-self: stretch;\n  background-color: red;\n  color: white;\n}\n.pulseColor {\n  margin: 20px 0 20px;\n  align-self: stretch;\n  background-color: #36d7e7;\n  color: white;\n}\n.spo2Color {\n  margin: 20px 0 20px;\n  align-self: stretch;\n  background-color: #36c1e7;\n  color: white;\n}\n.small {\n  max-height: 220px;\n  margin: 20px 0 20px;\n}\n.bigFont {\n  font-size: 64px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}