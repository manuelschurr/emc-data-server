{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/stream.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/stream.vue","mtime":1599667669237},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiL1VzZXJzL21hcmNndWxkbmVyL0dpdEh1Yi9lbWMtZGF0YS1zZXJ2ZXIvZnJvbnRlbmQvdHJhdW1hLXJvb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbWFyY2d1bGRuZXIvR2l0SHViL2VtYy1kYXRhLXNlcnZlci9mcm9udGVuZC90cmF1bWEtcm9vbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgYXhpb3MgPSByZXF1aXJlKCJheGlvcyIpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJjYW1lcmEiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjYXB0dXJlczogW10sCiAgICAgIGltYWdlU3RyaW5nczogW10sCiAgICAgIGNob3NlbkltYWdlOiBudWxsLAogICAgICBsb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBzZWxlY3RlZEVsZW1lbnRzOiBOdW1iZXIKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZpbGxEYXRhKCk7CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKHRoaXMuZmlsbERhdGEsIDUwMDApOwogIH0sCiAgbWV0aG9kczogewogICAgY2xpY2tNZXRob2Q6IGZ1bmN0aW9uIGNsaWNrTWV0aG9kKGV2ZW50KSB7CiAgICAgIHRoaXMuY2hvc2VuSW1hZ2UgPSBldmVudC5jdXJyZW50VGFyZ2V0LnNyYzsKICAgIH0sCiAgICBmaWxsRGF0YTogZnVuY3Rpb24gZmlsbERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB2bSwgYm9keSwgY29uZmlnOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHZtID0gX3RoaXM7CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICAgIGJvZHkgPSAiIjsKICAgICAgICAgICAgICAgIGNvbmZpZyA9IHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICAgICAgICAgICAgLy8iaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMC9pbWcvYWxsIiwKICAgICAgICAgICAgICAgICAgdXJsOiAiaHR0cHM6Ly8xMzQuMTU1LjQ4LjIxMTozMDAwL2ltZy9hbGwiLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7fSwKICAgICAgICAgICAgICAgICAgZGF0YTogYm9keQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGF4aW9zKGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuc3RhdHVzQ29kZSA9PT0gIjEwMDAwIikgewogICAgICAgICAgICAgICAgICAgIHZhciBuZXdJbWFnZVN0cmluZ3MgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1RvQWRkID0gW107CgogICAgICAgICAgICAgICAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihuZXdJbWFnZVN0cmluZ3MpLAogICAgICAgICAgICAgICAgICAgICAgICBfc3RlcDsKCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbWFnZSA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF2bS5pbWFnZVN0cmluZ3MuaW5jbHVkZXMoaW1hZ2UpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdm0uaW1hZ2VTdHJpbmdzLnB1c2goaW1hZ2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1RvQWRkLnB1c2goaW1hZ2UpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgICAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfbmV3VG9BZGQgPSBuZXdUb0FkZDsgX2kgPCBfbmV3VG9BZGQubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1hZ2VTdHIgPSBfbmV3VG9BZGRbX2ldOwogICAgICAgICAgICAgICAgICAgICAgdmFyIGJvZHlUd28gPSAiIjsKICAgICAgICAgICAgICAgICAgICAgIHZhciBjb25maWdHZXRJbWFnZXMgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgICAgICAgICAgICAgICAgIC8vImh0dHBzOi8vbG9jYWxob3N0OjMwMDAvaW1nL3NpbmdsZS8iICsgaW1hZ2VTdHIsCiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogImh0dHBzOi8vMTM0LjE1NS40OC4yMTE6MzAwMC9pbWcvc2luZ2xlLyIgKyBpbWFnZVN0ciwKICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAiYmxvYiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHt9LAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBib2R5VHdvCiAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgYXhpb3MoY29uZmlnR2V0SW1hZ2VzKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZUltYWdlcykgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdGF0dXNDb2RlID09PSAiMTAwMDAiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBpYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwocmVzcG9uc2VJbWFnZXMuZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdm0uY2FwdHVyZXMucHVzaChwaWMpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHZtLmNob3NlbkltYWdlID0gdm0uY2FwdHVyZXNbdm0uY2FwdHVyZXMubGVuZ3RoIC0gMV07CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["stream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAVA;AAaA,EAAA,OAbA,qBAaA;AACA,SAAA,QAAA;AACA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,KAAA,QAAA,EAAA,IAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,qBAAA,KAAA,EAAA;AACA,WAAA,WAAA,GAAA,KAAA,CAAA,aAAA,CAAA,GAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,EADA,GACA,KADA;AAEA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AAEA,gBAAA,IAJA,GAIA,EAJA;AAKA,gBAAA,MALA,GAKA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA;AACA,kBAAA,GAAA,EAAA,qCAHA;AAIA,kBAAA,OAAA,EAAA,EAJA;AAKA,kBAAA,IAAA,EAAA;AALA,iBALA;AAaA,gBAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,CAAA,IAAA,CAAA,UAAA,KAAA,OAAA,EAAA;AACA,wBAAA,eAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,wBAAA,QAAA,GAAA,EAAA;;AAFA,+DAGA,eAHA;AAAA;;AAAA;AAGA,0EAAA;AAAA,4BAAA,KAAA;;AACA,4BAAA,CAAA,EAAA,CAAA,YAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA;AACA,0BAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA,KAAA;AACA,0BAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AASA,iDAAA,QAAA,+BAAA;AAAA,0BAAA,QAAA,gBAAA;AACA,0BAAA,OAAA,GAAA,EAAA;AACA,0BAAA,eAAA,GAAA;AACA,wBAAA,MAAA,EAAA,KADA;AAEA;AACA,wBAAA,GAAA,EAAA,4CAAA,QAHA;AAIA,wBAAA,YAAA,EAAA,MAJA;AAKA,wBAAA,OAAA,EAAA,EALA;AAMA,wBAAA,IAAA,EAAA;AANA,uBAAA;AAQA,sBAAA,KAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,UAAA,cAAA,EAAA;AACA,4BAAA,QAAA,CAAA,IAAA,CAAA,UAAA,KAAA,OAAA,EAAA;AACA,8BAAA,GAAA,GAAA,GAAA,CAAA,eAAA,CAAA,cAAA,CAAA,IAAA,CAAA;AACA,0BAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,0BAAA,EAAA,CAAA,WAAA,GAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA;AACA,uBANA;AAOA;AACA;AACA,iBA7BA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AA/CA;AAnBA,CAAA","sourcesContent":["<template>\n  <div v-if=\"selectedElements <= 2\">\n    <div\n      class=\"gallery\"\n      id=\"mainDiv\"\n      v-if=\"this.loading && this.captures.length != 0\"\n    >\n      <div class=\"gallery-panel\">\n        <img v-bind:src=\"chosenImage\" width=\"100%\" />\n      </div>\n      <div class=\"row\">\n        <div\n          class=\"itemSpacing\"\n          v-for=\"screenshot in captures\"\n          :key=\"screenshot\"\n        >\n          <img\n            v-on:click=\"clickMethod($event)\"\n            v-bind:src=\"screenshot\"\n            height=\"87\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-else>Aktuell wurden noch keine Bilder gemacht</div>\n  </div>\n  <div v-else>\n    <div\n      class=\"gallery\"\n      id=\"mainDiv\"\n      v-if=\"this.loading && this.captures.length != 0\"\n    >\n      <div class=\"gallery-panel\">\n        <img v-bind:src=\"chosenImage\" width=\"70%\" />\n      </div>\n    </div>\n    <div v-else>Aktuell wurden noch keine Bilder gemacht</div>\n  </div>\n</template>\n\n<script>\nconst axios = require(\"axios\");\nexport default {\n  name: \"camera\",\n  data() {\n    return {\n      captures: [],\n      imageStrings: [],\n      chosenImage: null,\n      loading: false,\n    };\n  },\n  props: {\n    selectedElements: Number,\n  },\n  mounted() {\n    this.fillData();\n  },\n  created() {\n    this.timer = setInterval(this.fillData, 5000);\n  },\n  methods: {\n    clickMethod: function (event) {\n      this.chosenImage = event.currentTarget.src;\n    },\n    async fillData() {\n      var vm = this;\n      this.loading = true;\n\n      var body = \"\";\n      var config = {\n        method: \"get\",\n        //\"https://localhost:3000/img/all\",\n        url: \"https://134.155.48.211:3000/img/all\",\n        headers: {},\n        data: body,\n      };\n\n      axios(config).then(function (response) {\n        if (response.data.statusCode === \"10000\") {\n          var newImageStrings = response.data.data;\n          var newToAdd = [];\n          for (var image of newImageStrings) {\n            if (!vm.imageStrings.includes(image)) {\n              vm.imageStrings.push(image);\n              newToAdd.push(image);\n            }\n          }\n          for (var imageStr of newToAdd) {\n            var bodyTwo = \"\";\n            var configGetImages = {\n              method: \"get\",\n              //\"https://localhost:3000/img/single/\" + imageStr,\n              url: \"https://134.155.48.211:3000/img/single/\" + imageStr,\n              responseType: \"blob\",\n              headers: {},\n              data: bodyTwo,\n            };\n            axios(configGetImages).then(function (responseImages) {\n              if (response.data.statusCode === \"10000\") {\n                var pic = URL.createObjectURL(responseImages.data);\n                vm.captures.push(pic);\n                vm.chosenImage = vm.captures[vm.captures.length - 1];\n              }\n            });\n          }\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.itemSpacing {\n  margin: 5px 2px 0px 2px;\n}\n.row {\n  margin: 0px 0px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}