{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/babel-loader/lib/index.js!/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/src/App.vue","mtime":1599666966748},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"d-flex justify-content-center\" v-if=\"loading\">\n      <div\n        class=\"spinner-border\"\n        style=\"position: fixed; top: 50%;\"\n        role=\"status\"\n      ></div>\n      <div style=\"position: fixed; top: 55%;\">\n        Lade anfahrende Rettungswagen\n      </div>\n    </div>\n    <div v-else>\n      <RtwSelection\n        v-if=\"!rtwSelected && !loading\"\n        :selectRTW=\"selectRTW\"\n        :activeAmbulances=\"activeAmbulances\"\n        :inactiveAmbulances=\"inactiveAmbulances\"\n        :Rtwdocument=\"Rtwdocument\"\n        :apiKeyOpenRoute=\"apiKeyOpenRoute\"\n      />\n      <div v-if=\"rtwSelected\">\n        <Header :changeRTW=\"changeRTW\" />\n        <PatientData :patientId=\"selectedRTW.patientId\" />\n        <div v-if=\"openRouteError\">\n          <i class=\"fas fa-exclamation-triangle\"></i>\n          Der API-Token ist abgelaufen. Bitte updaten.\n          <input size=\"60\" v-model=\"apiKeyOpenRoute\" />\n          <button\n            type=\"button\"\n            id=\"btn-api-key\"\n            class=\"btn btn-primary\"\n            v-on:click=\"updateApiKey\"\n            :disabled=\"apiButtonIsDisabled\"\n          >\n            Update\n          </button>\n          <hr style=\"width: 100%; text-align: left; margin-left: 0;\" />\n        </div>\n\n        <div class=\"container-fluid\" v-if=\"rtwSelected\">\n          <div class=\"row align-items-start\">\n            <div class=\"col-2\">\n              <LeftSidebar :arrivalTime=\"selectedRTW.eta\" />\n            </div>\n            <div class=\"col-8\">\n              <MainComponent\n                :Rtwdocument=\"Rtwdocument\"\n                :patientId=\"selectedRTW.patientId\"\n              />\n            </div>\n            <div class=\"col-2\">\n              <RightSidebar />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./components/header.vue\";\nimport PatientData from \"./components/patientData.vue\";\nimport RightSidebar from \"./components/rightSidebar.vue\";\nimport LeftSidebar from \"./components/leftSidebar.vue\";\nimport MainComponent from \"./components/mainComponent.vue\";\nimport RtwSelection from \"./components/rtwSelection.vue\";\nconst axios = require(\"axios\");\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      rtwSelected: false,\n      Rtwdocument: {\n        long: null,\n        lat: null,\n        eta: null\n      },\n      activeAmbulances: [\n        {\n          ambulanceId: 3,\n          patientId: 1,\n          identifier: \"Malteser Hilfsdienst - Mockobjekt\"\n        }\n      ],\n      inactiveAmbulances: [],\n      loading: false,\n      selectedRTW: Object,\n      rtwLocations: [`[${8.487255}, ${49.492427}]`],\n      apiKeyOpenRoute:\n        \"5b3ce3597851110001cf62483aa1ff4db2864ef98a6872071775fb93\",\n      openRouteError: false,\n      apiButtonIsDisabled: true\n    };\n  },\n  components: {\n    Header,\n    PatientData,\n    RightSidebar,\n    LeftSidebar,\n    MainComponent,\n    RtwSelection\n  },\n  methods: {\n    updateApiKey: function() {\n      var context = this;\n      var config = {\n        method: \"put\",\n        //TO CHANGE\n        url: \"https://134.155.48.211:3000/apiKey/update/1\",\n        headers: {},\n        data: {\n          apiKeyId: 1,\n          value: this.apiKeyOpenRoute\n        }\n      };\n\n      axios(config)\n        .then(function(response) {\n          context.openRouteError = false;\n          context.getGnssdata();\n          console.log(JSON.stringify(response.data));\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    },\n    getApiKey: function() {\n      var context = this;\n      var config = {\n        method: \"get\",\n        //TO CHANGE\n        url: \"https://134.155.48.211:3000/apiKey/findAll\",\n        headers: {}\n      };\n\n      axios(config)\n        .then(function(response) {\n          context.apiKeyOpenRoute = response.data.data[0].value;\n          context.getGnssdata();\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    },\n    changeRTW: function() {\n      this.rtwSelected = !this.rtwSelected;\n      this.selectedRTW = Object;\n      //this.activeAmbulances = [];\n      this.Rtwdocument.long = null;\n      this.Rtwdocument.lat = null;\n      this.Rtwdocument.eta = null;\n    },\n    selectRTW: function(rtw) {\n      this.rtwSelected = !this.rtwSelected;\n      this.selectedRTW = rtw;\n      this.Rtwdocument.eta = rtw.eta;\n      this.Rtwdocument.long = rtw.long;\n      this.Rtwdocument.lat = rtw.lat;\n    },\n    getGnssdata: function() {\n      let config = {\n        method: \"get\",\n        url:\n          \"https://134.155.48.211:3000/ambulance/findGnssByAmbulanceId/\" +\n          this.selectedRTW.ambulanceId\n      };\n\n      axios(config)\n        .then(response => {\n          this.rtwLocations.splice(\n            1,\n            1,\n            `[${response.data.data.longitude}, ${response.data.data.latitude}]`\n          );\n          this.Rtwdocument.long = response.data.data.longitude;\n          this.Rtwdocument.lat = response.data.data.latitude;\n          this.computeETA();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n    computeETA: function() {\n      let request = new XMLHttpRequest();\n      if (this.rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          this.apiKeyOpenRoute //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              context.selectedRTW.eta = context.secToTime(\n                JSON.parse(request.responseText).durations[1][0]\n              );\n              context.Rtwdocument.eta = context.selectedRTW.eta;\n              console.log(\"Test request\");\n              context.$forceUpdate();\n            } else {\n              context.selectedRTW.eta = \"Fehler bei Routen Schnittstelle\";\n              context.openRouteError = true;\n            }\n          }\n        };\n        const body = `{\"locations\": [${this.rtwLocations}]}`;\n        request.send(body);\n      }\n    },\n    secToTime: function(etaInSec) {\n      if (!isNaN(etaInSec)) {\n        const rtwTimeReductionFactor = 0.734;\n        etaInSec = etaInSec * rtwTimeReductionFactor;\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    }\n  },\n  watch: {\n    rtwSelected: {\n      handler() {\n        // Request GNSS Data from Server every 10 Seconds\n        if (this.rtwSelected) {\n          this.interval = setInterval(() => {\n            this.getGnssdata();\n          }, 10000);\n        } else {\n          clearInterval(this.interval);\n        }\n      }\n    },\n    apiKeyOpenRoute: {\n      handler() {\n        if (this.apiKeyOpenRoute.length === 56) {\n          this.apiButtonIsDisabled = false;\n        } else {\n          this.apiButtonIsDisabled = true;\n        }\n      }\n    }\n  },\n  mounted: function() {\n    this.$root.$on(\"tokenStatus\", data => {\n      this.openRouteError = data;\n    });\n\n    this.$root.$on(\"apiToken\", data => {\n      this.apiKeyOpenRoute = data;\n    });\n\n    this.getApiKey();\n    // Consume REST-API\n    let rtwAPI = \"https://134.155.48.211:3000/ambulance/findAll\";\n\n    this.loading = true;\n    axios\n      .get(rtwAPI)\n      .then(response => {\n        for (var ambulance of response.data.data) {\n          if (ambulance.patientId != 0) {\n            this.activeAmbulances.push(ambulance);\n          } else {\n            this.inactiveAmbulances.push(ambulance);\n          }\n        }\n        for (var r of this.activeAmbulances) {\n          r.eta = 0;\n        }\n      })\n      .catch(errors => {\n        // react on errors.\n        console.error(\"AXIOS ERROR: \" + errors);\n      })\n      .finally(() => (this.loading = false));\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  min-height: 100vh;\n}\n</style>\n"],"sourceRoot":"src"}]}