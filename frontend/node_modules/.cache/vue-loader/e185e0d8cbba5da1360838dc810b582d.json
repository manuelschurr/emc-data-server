{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/src/components/pulseOxy.vue?vue&type=template&id=547611e7&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/src/components/pulseOxy.vue","mtime":1599660525999},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfdm0uc2VsZWN0ZWRFbGVtZW50cyA9PSAxCiAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3cgYWxpZ24taXRlbXMtc3RhcnQiIH0sIFsKICAgICAgICAgIF92bS5wdWxzZURhdGEubGVuZ3RoID09IDAgJiYgX3ZtLnNwbzJEYXRhLmxlbmd0aCA9PSAwCiAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIktlaW5lIFB1bHMgdW5kIFNwTzIgRGF0ZW4gdmVyZsO8Z2JhciwgZGllIEtvbXBvbmVudGUga2FubiBha3R1ZWxsIG5pY2h0IGdlbGFkZW4gd2VyZGVuLiIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZm9ybSIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWlubGluZSIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtOSIsIGF0dHJzOiB7IHdpZHRoOiAiMTAwJSIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmxvYWRlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicHVscy1veHktbGluZSIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInB1bHNlTGluZU1hcmdpbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImNoYXJ0LWRhdGEiOiBfdm0ucHVsc2VDaGFydERhdGEgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLmxhc3RQdWxzZSAhPSAiIiAmJgogICAgICAgICAgICAgICAgICAgICAgKF92bS5sYXN0UHVsc2UgPiAxMjAgfHwgX3ZtLmxhc3RQdWxzZSA8IDUwKQogICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29sLTMgbm90T2tQdWxzZU94eUNvbG9yIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImIiLCBbX3ZtLl92KCJQdWxzIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5sb2FkZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImJpZ0ZvbnQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5sYXN0UHVsc2UpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic3ZnIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJpIGJpLWhlYXJ0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMWVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMWVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogIjAgMCAxNiAxNiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6ICJjdXJyZW50Q29sb3IiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImZpbGwtcnVsZSI6ICJldmVub2RkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIk04IDIuNzQ4bC0uNzE3LS43MzdDNS42LjI4MSAyLjUxNC44NzggMS40IDMuMDUzYy0uNTIzIDEuMDIzLS42NDEgMi41LjMxNCA0LjM4NS45MiAxLjgxNSAyLjgzNCAzLjk4OSA2LjI4NiA2LjM1NyAzLjQ1Mi0yLjM2OCA1LjM2NS00LjU0MiA2LjI4Ni02LjM1Ny45NTUtMS44ODYuODM4LTMuMzYyLjMxNC00LjM4NUMxMy40ODYuODc4IDEwLjQuMjggOC43MTcgMi4wMUw4IDIuNzQ4ek04IDE1Qy03LjMzMyA0Ljg2OCAzLjI3OS0zLjA0IDcuODI0IDEuMTQzYy4wNi4wNTUuMTE5LjExMi4xNzYuMTcxYTMuMTIgMy4xMiAwIDAgMSAuMTc2LS4xN0MxMi43Mi0zLjA0MiAyMy4zMzMgNC44NjcgOCAxNXoiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJQUi9taW4gIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMyBwdWxzZUNvbG9yIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiUHVscyIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5sb2FkZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiYmlnRm9udCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5sYXN0UHVsc2UpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzdmciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJiaSBiaS1oZWFydCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMWVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjFlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94OiAiMCAwIDE2IDE2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6ICJjdXJyZW50Q29sb3IiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygicGF0aCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJmaWxsLXJ1bGUiOiAiZXZlbm9kZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIk04IDIuNzQ4bC0uNzE3LS43MzdDNS42LjI4MSAyLjUxNC44NzggMS40IDMuMDUzYy0uNTIzIDEuMDIzLS42NDEgMi41LjMxNCA0LjM4NS45MiAxLjgxNSAyLjgzNCAzLjk4OSA2LjI4NiA2LjM1NyAzLjQ1Mi0yLjM2OCA1LjM2NS00LjU0MiA2LjI4Ni02LjM1Ny45NTUtMS44ODYuODM4LTMuMzYyLjMxNC00LjM4NUMxMy40ODYuODc4IDEwLjQuMjggOC43MTcgMi4wMUw4IDIuNzQ4ek04IDE1Qy03LjMzMyA0Ljg2OCAzLjI3OS0zLjA0IDcuODI0IDEuMTQzYy4wNi4wNTUuMTE5LjExMi4xNzYuMTcxYTMuMTIgMy4xMiAwIDAgMSAuMTc2LS4xN0MxMi43Mi0zLjA0MiAyMy4zMzMgNC44NjcgOCAxNXoiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJQUi9taW4gIikKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZm9ybSIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWlubGluZSIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtOSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5sb2FkZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInB1bHMtb3h5LWxpbmUiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwdWxzZUxpbmVNYXJnaW4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJjaGFydC1kYXRhIjogX3ZtLnNwbzJDaGFydERhdGEgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLmxhc3RTcG8yICE9ICIiICYmIF92bS5sYXN0U3BvMiA8IDkwCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtMyBub3RPa1B1bHNlT3h5Q29sb3IiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ubG9hZGVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJiaWdGb250IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ubGFzdFNwbzIpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIk8iKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInN1YiIsIFtfdm0uX3YoIjIiKV0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJTcE8iKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInN1YiIsIFtfdm0uX3YoIjIiKV0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiUgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMyBzcG8yQ29sb3IiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDEpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ubG9hZGVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImJpZ0ZvbnQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ubGFzdFNwbzIpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJPIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3ViIiwgW192bS5fdigiMiIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiU3BPIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3ViIiwgW192bS5fdigiMiIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiUgIikKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIDogX3ZtLnNlbGVjdGVkRWxlbWVudHMgPT0gMgogICAgICA/IF9jKCJkaXYiKQogICAgICA6IF92bS5zZWxlY3RlZEVsZW1lbnRzID4gMgogICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgICBfdm0ubGFzdFB1bHNlICE9ICIiICYmIChfdm0ubGFzdFB1bHNlID4gMTIwIHx8IF92bS5sYXN0UHVsc2UgPCA1MCkKICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbCBub3RPa1B1bHNlT3h5Q29sb3IiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX2MoImIiLCBbX3ZtLl92KCJQdWxzIildKSwKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX3ZtLmxvYWRlZAogICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJiaWdGb250IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLmxhc3RQdWxzZSkpCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJpIGJpLWhlYXJ0IiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxZW0iLAogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMWVtIiwKICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g6ICIwIDAgMTYgMTYiLAogICAgICAgICAgICAgICAgICAgICAgZmlsbDogImN1cnJlbnRDb2xvciIsCiAgICAgICAgICAgICAgICAgICAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImZpbGwtcnVsZSI6ICJldmVub2RkIiwKICAgICAgICAgICAgICAgICAgICAgICAgZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAiTTggMi43NDhsLS43MTctLjczN0M1LjYuMjgxIDIuNTE0Ljg3OCAxLjQgMy4wNTNjLS41MjMgMS4wMjMtLjY0MSAyLjUuMzE0IDQuMzg1LjkyIDEuODE1IDIuODM0IDMuOTg5IDYuMjg2IDYuMzU3IDMuNDUyLTIuMzY4IDUuMzY1LTQuNTQyIDYuMjg2LTYuMzU3Ljk1NS0xLjg4Ni44MzgtMy4zNjIuMzE0LTQuMzg1QzEzLjQ4Ni44NzggMTAuNC4yOCA4LjcxNyAyLjAxTDggMi43NDh6TTggMTVDLTcuMzMzIDQuODY4IDMuMjc5LTMuMDQgNy44MjQgMS4xNDNjLjA2LjA1NS4xMTkuMTEyLjE3Ni4xNzFhMy4xMiAzLjEyIDAgMCAxIC4xNzYtLjE3QzEyLjcyLTMuMDQyIDIzLjMzMyA0Ljg2NyA4IDE1eiIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0uX3YoIlBSL21pbiAiKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIDogX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wgcHVsc2VDb2xvciIgfSwgWwogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIlB1bHMiKV0pLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0ubG9hZGVkCiAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImJpZ0ZvbnQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ubGFzdFB1bHNlKSkKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAic3ZnIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYmkgYmktaGVhcnQiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjFlbSIsCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxZW0iLAogICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogIjAgMCAxNiAxNiIsCiAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAiY3VycmVudENvbG9yIiwKICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAiZmlsbC1ydWxlIjogImV2ZW5vZGQiLAogICAgICAgICAgICAgICAgICAgICAgICBkOgogICAgICAgICAgICAgICAgICAgICAgICAgICJNOCAyLjc0OGwtLjcxNy0uNzM3QzUuNi4yODEgMi41MTQuODc4IDEuNCAzLjA1M2MtLjUyMyAxLjAyMy0uNjQxIDIuNS4zMTQgNC4zODUuOTIgMS44MTUgMi44MzQgMy45ODkgNi4yODYgNi4zNTcgMy40NTItMi4zNjggNS4zNjUtNC41NDIgNi4yODYtNi4zNTcuOTU1LTEuODg2LjgzOC0zLjM2Mi4zMTQtNC4zODVDMTMuNDg2Ljg3OCAxMC40LjI4IDguNzE3IDIuMDFMOCAyLjc0OHpNOCAxNUMtNy4zMzMgNC44NjggMy4yNzktMy4wNCA3LjgyNCAxLjE0M2MuMDYuMDU1LjExOS4xMTIuMTc2LjE3MWEzLjEyIDMuMTIgMCAwIDEgLjE3Ni0uMTdDMTIuNzItMy4wNDIgMjMuMzMzIDQuODY3IDggMTV6IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgIF92bS5fdigiUFIvbWluICIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICBfdm0ubGFzdFNwbzIgIT0gIiIgJiYgX3ZtLmxhc3RTcG8yIDwgOTAKICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbCBub3RPa1B1bHNlT3h5Q29sb3IiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX3ZtLl9tKDIpLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0ubG9hZGVkCiAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubG9hZGVkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibG9hZGVkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJiaWdGb250IgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhfdm0ubGFzdFNwbzIpKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgX3ZtLl92KCJPIiksCiAgICAgICAgICAgICAgICBfYygic3ViIiwgW192bS5fdigiMiIpXSksCiAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgIF92bS5fdigiU3BPIiksCiAgICAgICAgICAgICAgICBfYygic3ViIiwgW192bS5fdigiMiIpXSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIiUgIikKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sIHNwbzJDb2xvciIgfSwgWwogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0uX20oMyksCiAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgIF92bS5sb2FkZWQKICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiYmlnRm9udCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5sYXN0U3BvMikpCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBfdm0uX3YoIk8iKSwKICAgICAgICAgICAgICAgIF9jKCJzdWIiLCBbX3ZtLl92KCIyIildKSwKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX3ZtLl92KCJTcE8iKSwKICAgICAgICAgICAgICAgIF9jKCJzdWIiLCBbX3ZtLl92KCIyIildKSwKICAgICAgICAgICAgICAgIF92bS5fdigiJSAiKQogICAgICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgOiBfdm0uX2UoKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJiIiwgW192bS5fdigiIFNwTyIpLCBfYygic3ViIiwgW192bS5fdigiMiIpXSldKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiYiIsIFtfdm0uX3YoIiBTcE8iKSwgX2MoInN1YiIsIFtfdm0uX3YoIjIiKV0pXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImIiLCBbX3ZtLl92KCIgU3BPIiksIF9jKCJzdWIiLCBbX3ZtLl92KCIyIildKV0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJiIiwgW192bS5fdigiIFNwTyIpLCBfYygic3ViIiwgW192bS5fdigiMiIpXSldKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}