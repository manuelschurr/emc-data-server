{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/leftSidebar.vue?vue&type=style&index=0&id=026010f5&scoped=true&lang=css&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/leftSidebar.vue","mtime":1599208638870},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoub2tBQkNERSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzVjYjg1YzsKfQoubm90T2tBQkNERSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwp9Ci5va1B1bHNlT3h5IHsKICBjb2xvcjogd2hpdGU7Cn0KLm5vdE9rUHVsc2VPeHkgewogIGNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["leftSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"leftSidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"btn-group-vertical\" data-toggel=\"buttons\" role=\"group\">\n      <button\n        @click=\"setSelection($event)\"\n        id=\"multi-selection\"\n        class=\"btn btn-secondary\"\n        :disabled=\"showComponentMultiSelection\"\n        :class=\"toggleButton(showComponentMultiSelection)\"\n      >\n        Gesamtübersicht\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-puls\"\n        class=\"btn btn-secondary\"\n        :disabled=\"showComponentPulseoxy\"\n        :class=\"toggleButton(showComponentPulseoxy)\"\n      >\n        Puls Oxy\n        <br />\n        <div v-if=\"lastPulse != null && (lastPulse < 50 || lastPulse > 120)\" class=\"notOkPulseOxy\">\n          Puls: {{ lastPulse }}\n        </div>\n        <div v-else-if=\"lastPulse == null\" class=\"okPulseOxy\">Keine Puls Daten verfügbar</div>\n        <div v-else class=\"okPulseOxy\">Puls: {{ lastPulse }}</div>\n        <div v-if=\"lastSpo2 != null && lastSpo2 < 90\" class=\"notOkPulseOxy\">\n          SpO2: {{ lastSpo2 }}\n        </div>\n        <div v-else-if=\"lastSpo2 == null\" class=\"okPulseOxy\">Keine SpO2 Daten verfügbar</div>\n        <div v-else class=\"okPulseOxy\">SpO2: {{ lastSpo2 }}</div>\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-stream\"\n        class=\"btn btn-secondary\"\n        :disabled=\"showComponentStream\"\n        :class=\"toggleButton(showComponentStream)\"\n      >\n        Live Bild\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-position\"\n        class=\"btn btn-secondary\"\n        :disabled=\"showComponentMap\"\n        :class=\"toggleButton(showComponentMap)\"\n      >\n        Position\n        <br />\n        ETA: {{ arrivalTime ? arrivalTime : \"Fehler bei Routen Schnittstelle\" }}\n      </button>\n      <PulseOxy v-if=\"false\" />\n      <Stream v-if=\"false\" />\n      <Maps v-if=\"false\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PulseOxy from \"./pulseOxy.vue\";\nimport Stream from \"./stream.vue\";\nimport Maps from \"./maps.vue\";\nexport default {\n  data() {\n    return {\n      showComponentMap: false,\n      showComponentStream: false,\n      showComponentPulseoxy: false,\n      showComponentMultiSelection: false,\n      pastEvent: null,\n      selection: [],\n      lastPulse: null,\n      lastSpo2: null\n    };\n  },\n  components: {\n    PulseOxy,\n    Stream,\n    Maps\n  },\n  mounted() {\n    this.$root.$on(\"selectedComponent\", data => {\n      if (data === \"btn-puls\") {\n        this.selection = [];\n        this.selection.push(PulseOxy);\n      } else if (data === \"btn-stream\") {\n        this.selection = [];\n        this.selection.push(Stream);\n      } else if (data === \"btn-position\") {\n        this.selection = [];\n        this.selection.push(Maps);\n      } else if (data === \"multi-selection\") {\n        this.selection = [];\n        this.selection.push(Maps);\n        this.selection.push(Stream);\n        this.selection.push(PulseOxy);\n      }\n    });\n\n    this.$root.$on(\"lastPulseData\", data => {\n      this.lastPulse = data;\n    });\n    this.$root.$on(\"lastSpo2Data\", data => {\n      this.lastSpo2 = data;\n    });\n    this.$watch(\n      \"arrivalTime\",\n      arrivalTime => {\n        this.arrivalTime = arrivalTime;\n      },\n      { immediate: true }\n    );\n    this.setSelection({\n      currentTarget: {\n        id: \"multi-selection\"\n      }\n    });\n  },\n  props: {\n    arrivalTime: String\n  },\n  methods: {\n    setSelection(event) {\n      //var component = null;\n\n      if (event.currentTarget.id === \"btn-puls\") {\n        this.showComponentPulseoxy = !this.showComponentPulseoxy;\n        this.showComponentMap = false;\n        this.showComponentStream = false;\n        this.showComponentMultiSelection = false;\n        this.selection = [];\n        this.selection.push(PulseOxy);\n        //component = PulseOxy;\n      } else if (event.currentTarget.id === \"btn-stream\") {\n        this.showComponentStream = !this.showComponentStream;\n        this.showComponentPulseoxy = false;\n        this.showComponentMap = false;\n        this.showComponentMultiSelection = false;\n        this.selection = [];\n        this.selection.push(Stream);\n      } else if (event.currentTarget.id === \"btn-position\") {\n        this.showComponentMap = !this.showComponentMap;\n        this.showComponentPulseoxy = false;\n        this.showComponentStream = false;\n        this.showComponentMultiSelection = false;\n        this.selection = [];\n        this.selection.push(Maps);\n      } else if (event.currentTarget.id === \"multi-selection\") {\n        this.showComponentMultiSelection = !this.showComponentMultiSelection;\n        this.showComponentPulseoxy = false;\n        this.showComponentStream = false;\n        this.showComponentMap = false;\n        this.selection = [];\n        this.selection.push(Maps);\n        this.selection.push(Stream);\n        this.selection.push(PulseOxy);\n      }\n\n      this.$root.$emit(\"selectedComponent\", this.selection);\n    },\n    pushComponentToList(comp) {\n      if (!this.selection.includes(comp)) {\n        this.selection.push(comp);\n      } else {\n        let index = this.selection.indexOf(comp);\n        if (index > -1) {\n          this.selection.splice(index, 1);\n        }\n      }\n    },\n    toggleButton(status) {\n      let buttonClass = \"\";\n      if (status) {\n        buttonClass = \"okABCDE\";\n      }\n      return buttonClass;\n    }\n  }\n};\n</script>\n<style scoped>\n.okABCDE {\n  background-color: #5cb85c;\n}\n.notOkABCDE {\n  background-color: red;\n}\n.okPulseOxy {\n  color: white;\n}\n.notOkPulseOxy {\n  color: red;\n}\n</style>"]}]}