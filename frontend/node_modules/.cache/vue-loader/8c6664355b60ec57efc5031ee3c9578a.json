{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1597225158878},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUnR3U2VsZWN0aW9uIiwKICBwcm9wczogewogICAgc2VsZWN0UlRXOiBGdW5jdGlvbiwKICAgIGFtYnVsYW5jZXM6IEFycmF5CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgYXJyaXZhbFRpbWVzOiBbXSwKICAgIGFtYnVsYW5jZXNXaXRoRVRBczogW10sCiAgICBhbWJ1bGFuY2VzV2l0aE5vRVRBOiBbXQogICAgLy9ydHdMb2NhdGlvbnM6IFtdCiAgfSksCiAgbWV0aG9kczogewogICAgY29tcHV0ZUFsbEVUQXM6IGZ1bmN0aW9uKCkgewogICAgICBsZXQgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgICB2YXIgcnR3TG9jYXRpb25zID0gW107CiAgICAgIHZhciBpbmRleCA9IDA7CiAgICAgIC8vUHJvdG90eXBpbmc7IGNoYW5nZSBydHdMaXN0IHRvIHRoZSByZXBvbnNlIG9iamVjdDsgZmlyc3QgaXRlbSBpbiB0aGlzIGxpc3QgaGFzIHRvIGJlIHRoZSBVTU0gYWRkcmVzcwogICAgICAvL0V4Y2VwdGlvbiBIYW5kbGluZzogSWYgbm8gR05TUyBkYXRhIGlzIG9idGFpbmVkLCBkaXNwbGF5IHJ0dyBsaXN0IHdpdGhvdXQgRVRBCiAgICAgIGZvciAodmFyIHJ0dyBvZiB0aGlzLmFtYnVsYW5jZXMpIHsKICAgICAgICBjb25zb2xlLmxvZygiUlRXOiAiICsgSlNPTi5zdHJpbmdpZnkocnR3KSk7CiAgICAgICAgY29uc29sZS5sb2coImluZGV4OiAiICsgaW5kZXgpOwogICAgICAgIC8vRm9yIGVhY2ggUlRXIG1ha2UgYSBnZXQgcmVxdWVzdCB0byBvYnRpYW4gR05TUyBkYXRhIGFuZCBhZGQgdG8gdGhlIHJ0d0xvY2F0aW9ucyBbXQogICAgICAgIGlmICghaXNOYU4ocnR3Lmduc3NQb3NpdGlvbi5sb25nKSAmJiAhaXNOYU4ocnR3Lmduc3NQb3NpdGlvbi5sYXQpKSB7CiAgICAgICAgICBydHdMb2NhdGlvbnMucHVzaCgKICAgICAgICAgICAgYFske3J0dy5nbnNzUG9zaXRpb24ubG9uZ30sICR7cnR3Lmduc3NQb3NpdGlvbi5sYXR9XWAKICAgICAgICAgICk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuYW1idWxhbmNlc1dpdGhOb0VUQS5wdXNoKGluZGV4KTsKICAgICAgICB9CiAgICAgICAgaW5kZXgrKzsKICAgICAgfQogICAgICBjb25zb2xlLmxvZygicnR3bG9jYXRpb25zOiAiICsgcnR3TG9jYXRpb25zKTsKICAgICAgaWYgKHJ0d0xvY2F0aW9ucy5sZW5ndGggPiAxKSB7CiAgICAgICAgcmVxdWVzdC5vcGVuKAogICAgICAgICAgIlBPU1QiLAogICAgICAgICAgImh0dHBzOi8vYXBpLm9wZW5yb3V0ZXNlcnZpY2Uub3JnL3YyL21hdHJpeC9kcml2aW5nLWNhciIKICAgICAgICApOwoKICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoCiAgICAgICAgICAiQWNjZXB0IiwKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uLCBhcHBsaWNhdGlvbi9nZW8ranNvbiwgYXBwbGljYXRpb24vZ3B4K3htbCwgaW1nL3BuZzsgY2hhcnNldD11dGYtOCIKICAgICAgICApOwogICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcigiQ29udGVudC1UeXBlIiwgImFwcGxpY2F0aW9uL2pzb24iKTsKICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoCiAgICAgICAgICAiQXV0aG9yaXphdGlvbiIsCiAgICAgICAgICAiNWIzY2UzNTk3ODUxMTEwMDAxY2Y2MjQ4MDFlOTk1NDAyOTYzNDI2OGFkNTMzNmFhM2ViNTUxNDAiIC8vQVBJIEtleQogICAgICAgICk7CiAgICAgICAgbGV0IGNvbnRleHQgPSB0aGlzOwogICAgICAgIHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgICBpZiAocmVxdWVzdC5yZWFkeVN0YXRlID09PSA0KSB7CiAgICAgICAgICAgIGNvbnRleHQuYXJyaXZhbFRpbWVzID0gSlNPTi5wYXJzZSgKICAgICAgICAgICAgICByZXF1ZXN0LnJlc3BvbnNlVGV4dAogICAgICAgICAgICApLmR1cmF0aW9uc1swXTsKICAgICAgICAgICAgY29udGV4dC5tYXBFVEFzKCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJTdGF0dXM6IiwgcmVxdWVzdC5zdGF0dXMpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiSGVhZGVyczoiLCByZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKTsKICAgICAgICAgICAgY29uc29sZS5sb2coIkJvZHk6IiwgcmVxdWVzdC5yZXNwb25zZVRleHQpOwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgY29uc3QgYm9keSA9IGB7ImxvY2F0aW9ucyI6IFske3J0d0xvY2F0aW9uc31dfWA7CiAgICAgICAgcmVxdWVzdC5zZW5kKGJvZHkpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYW1idWxhbmNlcyA9IFtdOwogICAgICB9CiAgICB9LAogICAgbWFwRVRBczogZnVuY3Rpb24oKSB7CiAgICAgIGZvciAodmFyIGFJbmRleCBvZiB0aGlzLmFtYnVsYW5jZXNXaXRoTm9FVEEpIHsKICAgICAgICB0aGlzLmFycml2YWxUaW1lcy5zcGxpY2UoYUluZGV4LCAwLCAiTm8gR05TUyBhdmFpbGFibGUiKTsKICAgICAgfQoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFtYnVsYW5jZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoIXRoaXMuYW1idWxhbmNlc1dpdGhOb0VUQS5pbmNsdWRlcyhpKSkgewogICAgICAgICAgdGhpcy5hbWJ1bGFuY2VzW2ldLmV0YSA9IHRoaXMuc2VjVG9UaW1lKHRoaXMuYXJyaXZhbFRpbWVzW2ldKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5hbWJ1bGFuY2VzW2ldLmV0YSA9CiAgICAgICAgICAgICJOaWNodCBiZXJlY2hlbmJhciBhdWZncnVuZCBmZWhsZW5kZXIgR05TUyBEYXRlbiI7CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLmFtYnVsYW5jZXNXaXRoRVRBcyA9IHRoaXMuYW1idWxhbmNlczsKICAgIH0sCiAgICBzZWNUb1RpbWU6IGZ1bmN0aW9uKGV0YUluU2VjKSB7CiAgICAgIGNvbnNvbGUubG9nKCJzZWN0b1RpbWU6ICIgKyBldGFJblNlYyk7CiAgICAgIGlmICghaXNOYU4oZXRhSW5TZWMpKSB7CiAgICAgICAgdmFyIHNlY29uZHMgPSBNYXRoLmZsb29yKGV0YUluU2VjICUgNjApLnRvU3RyaW5nKCk7CiAgICAgICAgdmFyIG1pbnV0ZXMgPSBNYXRoLmZsb29yKGV0YUluU2VjIC8gNjApLnRvU3RyaW5nKCk7CiAgICAgICAgaWYgKHNlY29uZHMubGVuZ3RoID09PSAxKSB7CiAgICAgICAgICBzZWNvbmRzID0gIjAiICsgc2Vjb25kczsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1pbnV0ZXMgKyAiIE1pbnV0ZW4gIiArIHNlY29uZHMgKyAiIFNla3VuZGVuIjsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLmNvbXB1dGVBbGxFVEFzKCk7CiAgfQp9Owo="},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rtwSelection.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n      </h1>\n      <ul v-if=\"ambulances.length\">\n        <div v-if=\"ambulancesWithETAs.length\">\n          <li\n            v-for=\"(ambulance, index) in ambulances\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <p v-if=\"index > 0\">\n              <button @click=\"selectRTW(ambulance)\">\n                <img src=\"../assets/ambulance.png\" width=\"100\" />\n                <br />\n                <br />\n                RTW - {{ ambulance.identifier }}\n                <br />\n                ETA: {{ ambulance.eta }}\n                <br />\n                Diagnose: {{ ambulance.diagnosis }}\n                <br />\n                <ul>\n                  <li\n                    v-for=\"(value, name) in ambulance.abcde_schema\"\n                    v-bind:key=\"name\"\n                  >\n                    <div class=\"text-center\">\n                      <button\n                        v-if=\"value === true\"\n                        disabled\n                        pill\n                        class=\"rounded-circle notOkABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                      <button\n                        v-else-if=\"value === false\"\n                        disabled\n                        pill\n                        class=\"rounded-circle okABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                    </div>\n                  </li>\n                </ul>\n              </button>\n            </p>\n          </li>\n        </div>\n        <div v-else class=\"d-flex justify-content-center\">\n          <div\n            class=\"spinner-border\"\n            style=\"position: fixed; top: 50%;\"\n            role=\"status\"\n          ></div>\n          <div style=\"position: fixed; top: 55%;\">\n            Berechne geschätzte Ankunftszeit\n          </div>\n        </div>\n      </ul>\n      <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    ambulances: Array\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: []\n    //rtwLocations: []\n  }),\n  methods: {\n    computeAllETAs: function() {\n      let request = new XMLHttpRequest();\n      var rtwLocations = [];\n      var index = 0;\n      //Prototyping; change rtwList to the reponse object; first item in this list has to be the UMM address\n      //Exception Handling: If no GNSS data is obtained, display rtw list without ETA\n      for (var rtw of this.ambulances) {\n        console.log(\"RTW: \" + JSON.stringify(rtw));\n        console.log(\"index: \" + index);\n        //For each RTW make a get request to obtian GNSS data and add to the rtwLocations []\n        if (!isNaN(rtw.gnssPosition.long) && !isNaN(rtw.gnssPosition.lat)) {\n          rtwLocations.push(\n            `[${rtw.gnssPosition.long}, ${rtw.gnssPosition.lat}]`\n          );\n        } else {\n          this.ambulancesWithNoETA.push(index);\n        }\n        index++;\n      }\n      console.log(\"rtwlocations: \" + rtwLocations);\n      if (rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          \"5b3ce3597851110001cf624801e9954029634268ad5336aa3eb55140\" //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            context.arrivalTimes = JSON.parse(\n              request.responseText\n            ).durations[0];\n            context.mapETAs();\n            console.log(\"Status:\", request.status);\n            console.log(\"Headers:\", request.getAllResponseHeaders());\n            console.log(\"Body:\", request.responseText);\n          }\n        };\n        const body = `{\"locations\": [${rtwLocations}]}`;\n        request.send(body);\n      } else {\n        this.ambulances = [];\n      }\n    },\n    mapETAs: function() {\n      for (var aIndex of this.ambulancesWithNoETA) {\n        this.arrivalTimes.splice(aIndex, 0, \"No GNSS available\");\n      }\n\n      for (var i = 0; i < this.ambulances.length; i++) {\n        if (!this.ambulancesWithNoETA.includes(i)) {\n          this.ambulances[i].eta = this.secToTime(this.arrivalTimes[i]);\n        } else {\n          this.ambulances[i].eta =\n            \"Nicht berechenbar aufgrund fehlender GNSS Daten\";\n        }\n      }\n\n      this.ambulancesWithETAs = this.ambulances;\n    },\n    secToTime: function(etaInSec) {\n      console.log(\"sectoTime: \" + etaInSec);\n      if (!isNaN(etaInSec)) {\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    }\n  },\n  mounted: function() {\n    this.computeAllETAs();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: lightgreen;\n}\n.notOkABCDE {\n  background-color: lightcoral;\n}\n</style>\n"]}]}