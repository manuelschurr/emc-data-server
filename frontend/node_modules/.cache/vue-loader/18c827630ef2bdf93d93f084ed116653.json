{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/stream.vue?vue&type=style&index=0&id=2df65990&scoped=true&lang=css&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/stream.vue","mtime":1598867441174},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhbWVyYSB7CiAgd2lkdGg6IDY1dnc7CiAgaGVpZ2h0OiAyNXZoOwogIHBhZGRpbmc6IDI1cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoKLmZlZWQgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogMTI4MHB4OwogIG1hcmdpbjogMCBhdXRvOwogIGJhY2tncm91bmQtY29sb3I6ICMxNzE3MTc7Cn0K"},{"version":3,"sources":["stream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"stream.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"camera\" v-bind:style=\"styleObject\">\n    <video autoplay controls class=\"feed\">\n      <p>Aktuell läuft kein Livestream.</p>\n    </video>\n    <button\n      class=\"btn btn-dark btn-lg\"\n      style=\"margin-top: 7px; margin-bottom: 7px;\"\n      @click=\"this.takePicture\"\n    >\n      <i class=\"fa fa-camera\"></i>\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"camera\",\n  props: {\n    selectedElements: Number\n  },\n  methods: {\n    // initialize Webcam Livestream\n    initVideo() {\n      if (\n        \"mediaDevices\" in navigator &&\n        \"getUserMedia\" in navigator.mediaDevices\n      ) {\n        // set ratio to 16:9\n        let constraints = {\n          video: {\n            width: {\n              min: 640,\n              ideal: 1280,\n              max: 1920\n            },\n            height: {\n              min: 360,\n              ideal: 720,\n              max: 1080\n            }\n          }\n        };\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n          const videoPlayer = document.querySelector(\"video\");\n          videoPlayer.srcObject = stream;\n          videoPlayer.play();\n        });\n      } else {\n        alert(\"Kein Livestream verfügbar aktuell...\");\n      }\n    },\n    /*\n     *Screenshot of Livestream\n     */\n    takePicture() {\n      // pick canvas element to \"draw\" screenshot on\n      const pic = document.querySelector(\"canvas\");\n      const ctx = pic.getContext(\"2d\");\n      // setting picture quality and landscape\n      let ratio = window.innerHeight < window.innerWidth ? 16 / 9 : 9 / 16;\n      // set window width to max. of 1280px\n      pic.width = window.innerWidth < 1280 ? window.innerWidth : 1280;\n      pic.height = window.innerWidth / ratio;\n      // screenshot variable draws image\n      var screenshot = ctx.drawImage(\n        document.querySelector(\"video\"),\n        0,\n        0,\n        pic.width,\n        pic.height\n      );\n      // // array where all screenshots shall be stored\n      // var images = [];\n      // var screenshotCanvas = document.getElementById(\"galleryCanvas\");\n      // for (var i = 0; i <= images.length; i++) {\n      //     images.push(screenshot[i]);\n      //     var screenshotsDisplay = document.createElement(\"IMG\");\n      //     screenshotsDisplay.setAttribute(\"src\", images[i]);\n      //     screenshotCanvas.appendChild(screenshotsDisplay);\n      // }\n      // array where all screenshots shall be stored\n      // var images = [];\n      // var screenshotCanvas = document.getElementById(\"galleryCanvas\");\n      // for (var i = 0; i <= images.length; i++) {\n      //     images.push(screenshot[i]);\n      //     var screenshotsDisplay = document.createElement(\"CANVAS\");\n      //     screenshotsDisplay.setAttribute(\"src\", images[i]);\n      //     screenshotCanvas.appendChild(screenshotsDisplay);\n      // }\n      // array where all screenshots shall be stored\n      var images = new Array();\n      var screenshotCanvas = document.getElementById(\"galleryCanvas\");\n      for (var i = 0; i <= images.length; i++) {\n        images[i] = new Image();\n        images[i].src = screenshot[i];\n        var screenshotsDisplay = document.createElement(\"IMG\");\n        screenshotsDisplay.setAttribute(\"src\", images[i].src);\n        screenshotCanvas.appendChild(screenshotsDisplay);\n      }\n    }\n  },\n  //Webcam shall be initialized when Livestream Button is selected\n  mounted() {\n    this.initVideo();\n  },\n  computed: {\n    styleObject: function() {\n      if (this.selectedElements === 1) {\n        return {\n          width: \"55vw\",\n          height: \"25vh\",\n          padding: \"25px\",\n          \"box-sizing\": \"border-box;\"\n        };\n      } else {\n        return {\n          width: \"32vw\",\n          height: \"25vh\",\n          padding: \"25px\",\n          \"box-sizing\": \"border-box;\"\n        };\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.camera {\n  width: 65vw;\n  height: 25vh;\n  padding: 25px;\n  box-sizing: border-box;\n}\n\n.feed {\n  display: block;\n  width: 100%;\n  max-width: 1280px;\n  margin: 0 auto;\n  background-color: #171717;\n}\n</style>\n"]}]}