{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1599666955671},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rtwSelection.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n      </h1>\n      <div v-if=\"openRouteError\">\n        <i class=\"fas fa-exclamation-triangle\"></i>\n        Der API-Token ist abgelaufen. Bitte updaten.\n        <input size=\"60\" v-model=\"apiKeyOpenRoute\" />\n        <button\n          type=\"button\"\n          id=\"btn-api-key\"\n          class=\"btn btn-primary\"\n          v-on:click=\"updateApiKey\"\n          :disabled=\"apiButtonIsDisabled\"\n        >\n          Update\n        </button>\n        <hr style=\"width: 100%; text-align: left; margin-left: 0;\" />\n      </div>\n      <ul v-if=\"activeAmbulances.length\">\n        <div v-if=\"ambulancesWithETAs.length\">\n          <li\n            v-for=\"ambulance in ambulancesWithETAs\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <div v-if=\"ambulance.patientId\">\n              <p>\n                <button @click=\"selectRTW(ambulance)\">\n                  <img src=\"../assets/umm_team_logo.png\" width=\"100\" />\n                  <br />\n                  <br />\n                  RTW - {{ ambulance.identifier }}\n                  <br />\n                  ETA: {{ ambulance.eta }}\n                  <br />\n                  Informationen: {{ ambulance.miscellaneous }}\n                  <br />\n                  <ul>\n                    <li\n                      v-for=\"(value, name) in ambulance.abcde_schema\"\n                      v-bind:key=\"name\"\n                    >\n                      <div class=\"text-center\">\n                        <button\n                          v-if=\"value === false\"\n                          disabled\n                          pill\n                          class=\"rounded-circle notOkABCDE\"\n                        >\n                          {{ name }}\n                        </button>\n                        <button\n                          v-else-if=\"value === true\"\n                          disabled\n                          pill\n                          class=\"rounded-circle okABCDE\"\n                        >\n                          {{ name }}\n                        </button>\n                      </div>\n                    </li>\n                  </ul>\n                </button>\n              </p>\n            </div>\n          </li>\n        </div>\n        <div v-else class=\"d-flex justify-content-center\">\n          <div\n            class=\"spinner-border\"\n            style=\"position: fixed; top: 50%;\"\n            role=\"status\"\n          ></div>\n          <div style=\"position: fixed; top: 55%;\">{{ stateMessage }}</div>\n        </div>\n      </ul>\n      <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nvar axios = require(\"axios\");\n\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    activeAmbulances: Array,\n    inactiveAmbulances: Array,\n    apiKeyOpenRoute: String,\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: [],\n    rtwLocations: [`[${8.487255}, ${49.492427}]`],\n    stateMessage: \"Berechne geschätzte Ankunftszeit\",\n    openRouteError: false,\n    apiButtonIsDisabled: true,\n  }),\n  methods: {\n    updateApiKey: function () {\n      var context = this;\n      var config = {\n        method: \"put\",\n        //TO CHANGE\n        url: \"https://134.155.48.211:3000/apiKey/update/1\",\n        headers: {},\n        data: {\n          apiKeyId: 1,\n          value: this.apiKeyOpenRoute,\n        },\n      };\n\n      axios(config)\n        .then(function (response) {\n          context.openRouteError = false;\n          context.getGnssData();\n          console.log(JSON.stringify(response.data));\n          context.$root.$emit(\"apiToken\", context.apiKeyOpenRoute);\n          context.$root.$emit(\"tokenStatus\", context.openRouteError);\n          context.$forceUpdate;\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    getApiKey: function () {\n      var context = this;\n      var config = {\n        method: \"get\",\n        //TO CHANGE\n        url: \"https://134.155.48.211:3000/apiKey/findAll\",\n        headers: {},\n      };\n\n      axios(config)\n        .then(function (response) {\n          context.apiKeyOpenRoute = response.data.data[0].value;\n          context.$root.$emit(\"apiToken\", context.apiKeyOpenRoute);\n          context.getGnssData();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    computeETA: function (currentRtw) {\n      let request = new XMLHttpRequest();\n      if (this.rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\"Authorization\", this.apiKeyOpenRoute);\n        let context = this;\n        request.onreadystatechange = function () {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              currentRtw.eta = context.secToTime(\n                JSON.parse(request.responseText).durations[1][0]\n              );\n              context.stateMessage = \"ETA wurde berechnet\";\n              // After computing the ETA, the patient miscellaneous informations (50 first characters of the miscellaneous)\n              // and ABCDE Schema is fetched from the server.\n              let config = {\n                method: \"get\",\n                url:\n                  \"https://134.155.48.211:3000/patient/findByAmbulanceId/\" +\n                  currentRtw.ambulanceId,\n              };\n              var patientData = {};\n              axios(config)\n                .then((response) => {\n                  if (response.data.statusCode === \"10000\") {\n                    patientData = {\n                      patientId: response.data.data.patientId,\n                      miscellaneous: response.data.data.miscellaneous.slice(\n                        0,\n                        50\n                      ),\n                      abcde_schema: {\n                        A: response.data.data.AIsSelected,\n                        B: response.data.data.BIsSelected,\n                        C: response.data.data.CIsSelected,\n                        D: response.data.data.DIsSelected,\n                        E: response.data.data.EIsSelected,\n                      },\n                    };\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"AXIOS PATIENT DATA ERROR: \" + error);\n                })\n                .then(() => {\n                  var contains = false;\n                  currentRtw.patientId = patientData.patientId;\n                  currentRtw.miscellaneous = patientData.miscellaneous;\n                  currentRtw.abcde_schema = patientData.abcde_schema;\n                  for (var a of context.ambulancesWithETAs) {\n                    if (currentRtw._id === a._id) {\n                      contains = true;\n                    }\n                  }\n                  if (!contains) {\n                    context.ambulancesWithETAs.push(currentRtw);\n                  }\n                });\n            } else {\n              var contains = false;\n              currentRtw.eta = \"Fehler bei Routen Schnittstelle\";\n              context.stateMessage = \"Fehler bei Routen Schnittstelle\";\n              for (var a of context.ambulancesWithETAs) {\n                if (currentRtw._id === a._id) {\n                  contains = true;\n                }\n              }\n              if (!contains) {\n                context.ambulancesWithETAs.push(currentRtw);\n              }\n              context.openRouteError = true;\n              context.$root.$emit(\"tokenStatus\", context.openRouteError);\n            }\n          }\n        };\n        const body = `{\"locations\": [${this.rtwLocations}]}`;\n        request.send(body);\n      }\n    },\n    secToTime: function (etaInSec) {\n      if (!isNaN(etaInSec)) {\n        const rtwTimeReductionFactor = 0.734;\n        etaInSec = etaInSec * rtwTimeReductionFactor;\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    },\n    getGnssData: function () {\n      for (var rtw of this.activeAmbulances) {\n        if (rtw.ambulanceId && rtw.patientId != 0) {\n          let config = {\n            method: \"get\",\n            url:\n              \"https://134.155.48.211:3000/ambulance/findGnssByAmbulanceId/\" +\n              rtw.ambulanceId,\n          };\n\n          axios(config)\n            .then((response) => {\n              if (response.data.statusCode === \"10000\") {\n                this.rtwLocations.splice(\n                  1,\n                  1,\n                  `[${response.data.data.longitude}, ${response.data.data.latitude}]`\n                );\n                var currentRtw;\n                for (var c of this.activeAmbulances) {\n                  if (response.data.data.ambulanceId === c.ambulanceId) {\n                    currentRtw = c;\n                  }\n                }\n                currentRtw.long = response.data.data.longitude;\n                currentRtw.lat = response.data.data.latitude;\n                this.computeETA(currentRtw);\n              }\n            })\n            .catch((error) => {\n              var errorId = JSON.stringify(error.config.url.slice(-1));\n              console.log(\n                \"Keine GNSS Daten verfügbar für AmbulanceID: \" + errorId\n              );\n              this.stateMessage = JSON.stringify(error.message);\n\n              //add I\n              for (var ea of this.activeAmbulances) {\n                if (`\"${ea.ambulanceId}\"` === errorId) {\n                  ea.eta = \"Keine GNSS Daten verfügbar\";\n                  this.ambulancesWithETAs.push(ea);\n                  this.$forceUpdate();\n                }\n              }\n            });\n        }\n      }\n    },\n  },\n  mounted: function () {\n    //this.getApiKey();\n    this.getGnssData();\n  },\n  watch: {\n    apiKeyOpenRoute: {\n      handler() {\n        if (this.apiKeyOpenRoute.length === 56) {\n          this.apiButtonIsDisabled = false;\n        } else {\n          this.apiButtonIsDisabled = true;\n        }\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: green;\n  color: white;\n}\n.notOkABCDE {\n  background-color: red;\n  color: white;\n}\n</style>\n"]}]}