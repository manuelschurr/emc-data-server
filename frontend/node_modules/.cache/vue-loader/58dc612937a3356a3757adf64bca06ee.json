{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1599147042619},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCnZhciBheGlvcyA9IHJlcXVpcmUoImF4aW9zIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlJ0d1NlbGVjdGlvbiIsCiAgcHJvcHM6IHsKICAgIHNlbGVjdFJUVzogRnVuY3Rpb24sCiAgICBhY3RpdmVBbWJ1bGFuY2VzOiBBcnJheSwKICAgIGluYWN0aXZlQW1idWxhbmNlczogQXJyYXkKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBhcnJpdmFsVGltZXM6IFtdLAogICAgYW1idWxhbmNlc1dpdGhFVEFzOiBbXSwKICAgIGFtYnVsYW5jZXNXaXRoTm9FVEE6IFtdLAogICAgcnR3TG9jYXRpb25zOiBbYFskezguNDg3MjU1fSwgJHs0OS40OTI0Mjd9XWBdLAogICAgc3RhdGVNZXNzYWdlOiAiQmVyZWNobmUgZ2VzY2jDpHR6dGUgQW5rdW5mdHN6ZWl0IiwKICAgIGFyY2hpdmU6IGZhbHNlCiAgfSksCiAgbWV0aG9kczogewogICAgY2xhc3NBcmNoaXZlQnV0dG9uOiBmdW5jdGlvbigpIHsKICAgICAgaWYgKHRoaXMuYXJjaGl2ZSkgewogICAgICAgIHJldHVybiAiYnRuIGJ0bi1zdWNjZXNzIjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gImJ0biBidG4tc2Vjb25kYXJ5IjsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZUFyY2hpdmU6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmFyY2hpdmUgPSAhdGhpcy5hcmNoaXZlOwogICAgfSwKICAgIGNvbXB1dGVFVEE6IGZ1bmN0aW9uKGN1cnJlbnRSdHcpIHsKICAgICAgbGV0IHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgaWYgKHRoaXMucnR3TG9jYXRpb25zLmxlbmd0aCA+IDEpIHsKICAgICAgICByZXF1ZXN0Lm9wZW4oCiAgICAgICAgICAiUE9TVCIsCiAgICAgICAgICAiaHR0cHM6Ly9hcGkub3BlbnJvdXRlc2VydmljZS5vcmcvdjIvbWF0cml4L2RyaXZpbmctY2FyIgogICAgICAgICk7CgogICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcigKICAgICAgICAgICJBY2NlcHQiLAogICAgICAgICAgImFwcGxpY2F0aW9uL2pzb24sIGFwcGxpY2F0aW9uL2dlbytqc29uLCBhcHBsaWNhdGlvbi9ncHgreG1sLCBpbWcvcG5nOyBjaGFyc2V0PXV0Zi04IgogICAgICAgICk7CiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLCAiYXBwbGljYXRpb24vanNvbiIpOwogICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcigKICAgICAgICAgICJBdXRob3JpemF0aW9uIiwKICAgICAgICAgICI1YjNjZTM1OTc4NTExMTAwMDFjZjYyNDgwOGQxZjk1OWRmNTM0YWMzYWRjMDYyMDI1NmE2OGVjNyIgLy9BUEkgS2V5CiAgICAgICAgKTsKICAgICAgICBsZXQgY29udGV4dCA9IHRoaXM7CiAgICAgICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHsKICAgICAgICAgIGlmIChyZXF1ZXN0LnJlYWR5U3RhdGUgPT09IDQpIHsKICAgICAgICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICBjdXJyZW50UnR3LmV0YSA9IGNvbnRleHQuc2VjVG9UaW1lKAogICAgICAgICAgICAgICAgSlNPTi5wYXJzZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCkuZHVyYXRpb25zWzFdWzBdCiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAvLyBBZnRlciBjb21wdXRpbmcgdGhlIEVUQSwgdGhlIHBhdGllbnQgbWlzY2VsbGFuZW91cyBpbmZvcm1hdGlvbnMgKDUwIGZpcnN0IGNoYXJhY3RlcnMgb2YgdGhlIG1pc2NlbGxhbmVvdXMpCiAgICAgICAgICAgICAgLy8gYW5kIEFCQ0RFIFNjaGVtYSBpcyBmZXRjaGVkIGZyb20gdGhlIHNlcnZlci4KICAgICAgICAgICAgICBsZXQgY29uZmlnID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICAgICAgICAgIHVybDoKICAgICAgICAgICAgICAgICAgImh0dHBzOi8vMTM0LjE1NS40OC4yMTE6MzAwMC9wYXRpZW50L2ZpbmRCeUFtYnVsYW5jZUlkLyIgKwogICAgICAgICAgICAgICAgICBjdXJyZW50UnR3LmFtYnVsYW5jZUlkCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB2YXIgcGF0aWVudERhdGEgPSB7fTsKICAgICAgICAgICAgICBheGlvcyhjb25maWcpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1c0NvZGUgPT09ICIxMDAwMCIpIHsKICAgICAgICAgICAgICAgICAgICBwYXRpZW50RGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAgIHBhdGllbnRJZDogcmVzcG9uc2UuZGF0YS5kYXRhLnBhdGllbnRJZCwKICAgICAgICAgICAgICAgICAgICAgIG1pc2NlbGxhbmVvdXM6IHJlc3BvbnNlLmRhdGEuZGF0YS5taXNjZWxsYW5lb3VzLnNsaWNlKAogICAgICAgICAgICAgICAgICAgICAgICAwLAogICAgICAgICAgICAgICAgICAgICAgICA1MAogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIGFiY2RlX3NjaGVtYTogewogICAgICAgICAgICAgICAgICAgICAgICBBOiByZXNwb25zZS5kYXRhLmRhdGEuQUlzU2VsZWN0ZWQsCiAgICAgICAgICAgICAgICAgICAgICAgIEI6IHJlc3BvbnNlLmRhdGEuZGF0YS5CSXNTZWxlY3RlZCwKICAgICAgICAgICAgICAgICAgICAgICAgQzogcmVzcG9uc2UuZGF0YS5kYXRhLkNJc1NlbGVjdGVkLAogICAgICAgICAgICAgICAgICAgICAgICBEOiByZXNwb25zZS5kYXRhLmRhdGEuRElzU2VsZWN0ZWQsCiAgICAgICAgICAgICAgICAgICAgICAgIEU6IHJlc3BvbnNlLmRhdGEuZGF0YS5FSXNTZWxlY3RlZAogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQVhJT1MgUEFUSUVOVCBEQVRBIEVSUk9SOiAiICsgZXJyb3IpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgY3VycmVudFJ0dy5wYXRpZW50SWQgPSBwYXRpZW50RGF0YS5wYXRpZW50SWQ7CiAgICAgICAgICAgICAgICAgIGN1cnJlbnRSdHcubWlzY2VsbGFuZW91cyA9IHBhdGllbnREYXRhLm1pc2NlbGxhbmVvdXM7CiAgICAgICAgICAgICAgICAgIGN1cnJlbnRSdHcuYWJjZGVfc2NoZW1hID0gcGF0aWVudERhdGEuYWJjZGVfc2NoZW1hOwogICAgICAgICAgICAgICAgICBjb250ZXh0LmFtYnVsYW5jZXNXaXRoRVRBcy5wdXNoKGN1cnJlbnRSdHcpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY3VycmVudFJ0dy5ldGEgPSAiRmVobGVyIGJlaSBSb3V0ZW4gU2Nobml0dHN0ZWxsZSI7CiAgICAgICAgICAgICAgY29udGV4dC5hbWJ1bGFuY2VzV2l0aEVUQXMucHVzaChjdXJyZW50UnR3KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgY29uc3QgYm9keSA9IGB7ImxvY2F0aW9ucyI6IFske3RoaXMucnR3TG9jYXRpb25zfV19YDsKICAgICAgICByZXF1ZXN0LnNlbmQoYm9keSk7CiAgICAgIH0KICAgIH0sCiAgICBzZWNUb1RpbWU6IGZ1bmN0aW9uKGV0YUluU2VjKSB7CiAgICAgIGlmICghaXNOYU4oZXRhSW5TZWMpKSB7CiAgICAgICAgY29uc3QgcnR3VGltZVJlZHVjdGlvbkZhY3RvciA9IDAuNzM0OwogICAgICAgIGV0YUluU2VjID0gZXRhSW5TZWMgKiBydHdUaW1lUmVkdWN0aW9uRmFjdG9yOwogICAgICAgIHZhciBzZWNvbmRzID0gTWF0aC5mbG9vcihldGFJblNlYyAlIDYwKS50b1N0cmluZygpOwogICAgICAgIHZhciBtaW51dGVzID0gTWF0aC5mbG9vcihldGFJblNlYyAvIDYwKS50b1N0cmluZygpOwogICAgICAgIGlmIChzZWNvbmRzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgc2Vjb25kcyA9ICIwIiArIHNlY29uZHM7CiAgICAgICAgfQogICAgICAgIHJldHVybiBtaW51dGVzICsgIiBNaW51dGVuICIgKyBzZWNvbmRzICsgIiBTZWt1bmRlbiI7CiAgICAgIH0KICAgIH0sCiAgICBnZXRHbnNzRGF0YTogZnVuY3Rpb24oKSB7CiAgICAgIGZvciAodmFyIHJ0dyBvZiB0aGlzLmFtYnVsYW5jZXMpIHsKICAgICAgICBpZiAocnR3LmFtYnVsYW5jZUlkICYmIHJ0dy5wYXRpZW50SWQgIT0gMCkgewogICAgICAgICAgbGV0IGNvbmZpZyA9IHsKICAgICAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICAgICAgdXJsOgogICAgICAgICAgICAgICJodHRwczovLzEzNC4xNTUuNDguMjExOjMwMDAvYW1idWxhbmNlL2ZpbmRHbnNzQnlBbWJ1bGFuY2VJZC8iICsKICAgICAgICAgICAgICBydHcuYW1idWxhbmNlSWQKICAgICAgICAgIH07CgogICAgICAgICAgYXhpb3MoY29uZmlnKQogICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuc3RhdHVzQ29kZSA9PT0gIjEwMDAwIikgewogICAgICAgICAgICAgICAgdGhpcy5ydHdMb2NhdGlvbnMuc3BsaWNlKAogICAgICAgICAgICAgICAgICAxLAogICAgICAgICAgICAgICAgICAxLAogICAgICAgICAgICAgICAgICBgWyR7cmVzcG9uc2UuZGF0YS5kYXRhLmxvbmdpdHVkZX0sICR7cmVzcG9uc2UuZGF0YS5kYXRhLmxhdGl0dWRlfV1gCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRSdHc7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBjIG9mIHRoaXMuYW1idWxhbmNlcykgewogICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5kYXRhLmFtYnVsYW5jZUlkID09PSBjLmFtYnVsYW5jZUlkKSB7CiAgICAgICAgICAgICAgICAgICAgY3VycmVudFJ0dyA9IGM7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGN1cnJlbnRSdHcubG9uZyA9IHJlc3BvbnNlLmRhdGEuZGF0YS5sb25naXR1ZGU7CiAgICAgICAgICAgICAgICBjdXJyZW50UnR3LmxhdCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5sYXRpdHVkZTsKICAgICAgICAgICAgICAgIHRoaXMuY29tcHV0ZUVUQShjdXJyZW50UnR3KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgdmFyIGVycm9ySWQgPSBKU09OLnN0cmluZ2lmeShlcnJvci5jb25maWcudXJsLnNsaWNlKC0xKSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coCiAgICAgICAgICAgICAgICAiS2VpbmUgR05TUyBEYXRlbiB2ZXJmw7xnYmFyIGbDvHIgQW1idWxhbmNlSUQ6ICIgKyBlcnJvcklkCiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICB0aGlzLnN0YXRlTWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KGVycm9yLm1lc3NhZ2UpOwoKICAgICAgICAgICAgICAvL2FkZCBJCiAgICAgICAgICAgICAgZm9yICh2YXIgZWEgb2YgdGhpcy5hbWJ1bGFuY2VzKSB7CiAgICAgICAgICAgICAgICBpZiAoYCIke2VhLmFtYnVsYW5jZUlkfSJgID09PSBlcnJvcklkKSB7CiAgICAgICAgICAgICAgICAgIGVhLmV0YSA9ICJLZWluZSBHTlNTIERhdGVuIHZlcmbDvGdiYXIiOwogICAgICAgICAgICAgICAgICB0aGlzLmFtYnVsYW5jZXNXaXRoRVRBcy5wdXNoKGVhKTsKICAgICAgICAgICAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLmdldEduc3NEYXRhKCk7CiAgfQp9Owo="},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"rtwSelection.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n\n        <button :class=\"classArchiveButton()\" @click=\"toggleArchive\">\n          Archiv\n        </button>\n      </h1>\n      <div v-if=\"!archive\">\n        <ul v-if=\"activeAmbulances.length\">\n          <div v-if=\"ambulancesWithETAs.length\">\n            <li\n              v-for=\"ambulance in ambulancesWithETAs\"\n              v-bind:key=\"ambulance.identifier\"\n            >\n              <div v-if=\"ambulance.patientId\">\n                <p>\n                  <button @click=\"selectRTW(ambulance)\">\n                    <img src=\"../assets/ambulance.png\" width=\"100\" />\n                    <br />\n                    <br />\n                    RTW - {{ ambulance.identifier }}\n                    <br />\n                    ETA: {{ ambulance.eta }}\n                    <br />\n                    Informationen: {{ ambulance.miscellaneous }}\n                    <br />\n                    <ul>\n                      <li\n                        v-for=\"(value, name) in ambulance.abcde_schema\"\n                        v-bind:key=\"name\"\n                      >\n                        <div class=\"text-center\">\n                          <button\n                            v-if=\"value === false\"\n                            disabled\n                            pill\n                            class=\"rounded-circle notOkABCDE\"\n                          >\n                            {{ name }}\n                          </button>\n                          <button\n                            v-else-if=\"value === true\"\n                            disabled\n                            pill\n                            class=\"rounded-circle okABCDE\"\n                          >\n                            {{ name }}\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </button>\n                </p>\n              </div>\n            </li>\n          </div>\n          <div v-else class=\"d-flex justify-content-center\">\n            <div\n              class=\"spinner-border\"\n              style=\"position: fixed; top: 50%;\"\n              role=\"status\"\n            ></div>\n            <div style=\"position: fixed; top: 55%;\">{{ stateMessage }}</div>\n          </div>\n        </ul>\n        <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n      </div>\n      <div v-else>\n        <ul v-if=\"inactiveAmbulances.length\">\n          <li\n            v-for=\"ambulance in inactiveAmbulances\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <p>\n              <button @click=\"selectRTW(ambulance)\">\n                <img src=\"../assets/ambulance.png\" width=\"100\" />\n                <br />\n                <br />\n                RTW - {{ ambulance.identifier }}\n                <br />\n                Informationen: {{ ambulance.miscellaneous }}\n                <br />\n              </button>\n            </p>\n          </li>\n        </ul>\n        <h3 v-else>... Aktuell sind keine RTW's im Archiv ...</h3>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nvar axios = require(\"axios\");\n\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    activeAmbulances: Array,\n    inactiveAmbulances: Array\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: [],\n    rtwLocations: [`[${8.487255}, ${49.492427}]`],\n    stateMessage: \"Berechne geschätzte Ankunftszeit\",\n    archive: false\n  }),\n  methods: {\n    classArchiveButton: function() {\n      if (this.archive) {\n        return \"btn btn-success\";\n      } else {\n        return \"btn btn-secondary\";\n      }\n    },\n    toggleArchive: function() {\n      this.archive = !this.archive;\n    },\n    computeETA: function(currentRtw) {\n      let request = new XMLHttpRequest();\n      if (this.rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          \"5b3ce3597851110001cf624808d1f959df534ac3adc0620256a68ec7\" //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              currentRtw.eta = context.secToTime(\n                JSON.parse(request.responseText).durations[1][0]\n              );\n              // After computing the ETA, the patient miscellaneous informations (50 first characters of the miscellaneous)\n              // and ABCDE Schema is fetched from the server.\n              let config = {\n                method: \"get\",\n                url:\n                  \"https://134.155.48.211:3000/patient/findByAmbulanceId/\" +\n                  currentRtw.ambulanceId\n              };\n              var patientData = {};\n              axios(config)\n                .then(response => {\n                  if (response.data.statusCode === \"10000\") {\n                    patientData = {\n                      patientId: response.data.data.patientId,\n                      miscellaneous: response.data.data.miscellaneous.slice(\n                        0,\n                        50\n                      ),\n                      abcde_schema: {\n                        A: response.data.data.AIsSelected,\n                        B: response.data.data.BIsSelected,\n                        C: response.data.data.CIsSelected,\n                        D: response.data.data.DIsSelected,\n                        E: response.data.data.EIsSelected\n                      }\n                    };\n                  }\n                })\n                .catch(error => {\n                  console.log(\"AXIOS PATIENT DATA ERROR: \" + error);\n                })\n                .then(() => {\n                  currentRtw.patientId = patientData.patientId;\n                  currentRtw.miscellaneous = patientData.miscellaneous;\n                  currentRtw.abcde_schema = patientData.abcde_schema;\n                  context.ambulancesWithETAs.push(currentRtw);\n                });\n            } else {\n              currentRtw.eta = \"Fehler bei Routen Schnittstelle\";\n              context.ambulancesWithETAs.push(currentRtw);\n            }\n          }\n        };\n        const body = `{\"locations\": [${this.rtwLocations}]}`;\n        request.send(body);\n      }\n    },\n    secToTime: function(etaInSec) {\n      if (!isNaN(etaInSec)) {\n        const rtwTimeReductionFactor = 0.734;\n        etaInSec = etaInSec * rtwTimeReductionFactor;\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    },\n    getGnssData: function() {\n      for (var rtw of this.ambulances) {\n        if (rtw.ambulanceId && rtw.patientId != 0) {\n          let config = {\n            method: \"get\",\n            url:\n              \"https://134.155.48.211:3000/ambulance/findGnssByAmbulanceId/\" +\n              rtw.ambulanceId\n          };\n\n          axios(config)\n            .then(response => {\n              if (response.data.statusCode === \"10000\") {\n                this.rtwLocations.splice(\n                  1,\n                  1,\n                  `[${response.data.data.longitude}, ${response.data.data.latitude}]`\n                );\n                var currentRtw;\n                for (var c of this.ambulances) {\n                  if (response.data.data.ambulanceId === c.ambulanceId) {\n                    currentRtw = c;\n                  }\n                }\n                currentRtw.long = response.data.data.longitude;\n                currentRtw.lat = response.data.data.latitude;\n                this.computeETA(currentRtw);\n              }\n            })\n            .catch(error => {\n              var errorId = JSON.stringify(error.config.url.slice(-1));\n              console.log(\n                \"Keine GNSS Daten verfügbar für AmbulanceID: \" + errorId\n              );\n              this.stateMessage = JSON.stringify(error.message);\n\n              //add I\n              for (var ea of this.ambulances) {\n                if (`\"${ea.ambulanceId}\"` === errorId) {\n                  ea.eta = \"Keine GNSS Daten verfügbar\";\n                  this.ambulancesWithETAs.push(ea);\n                  this.$forceUpdate();\n                }\n              }\n            });\n        }\n      }\n    }\n  },\n  mounted: function() {\n    this.getGnssData();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: green;\n  color: white;\n}\n.notOkABCDE {\n  background-color: red;\n  color: white;\n}\n</style>\n"]}]}