{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rightSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rightSidebar.vue","mtime":1599137868991},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCBHYWxsZXJ5IGZyb20gIi4vR2FsbGVyeSI7CmV4cG9ydCBkZWZhdWx0IHsKICAvLyBjb21wb25lbnRzOiB7CiAgLy8gICAgIEdhbGxlcnksCiAgLy8gfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2NyZWVuc2hvdHM6IFtdLAogICAgICBvdXRwdXQ6ICIiLAogICAgICBwYXRpZW50OiBPYmplY3QKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8gdGhpcy4kcm9vdC5lbWl0KCJzZWxlY3RTY3JlZW5zaG90cyIsICJjYXB0dXJlcyIpOwogICAgLy90aGlzLiRyb290LiRvbigic2VsZWN0U2NyZWVuc2hvdHMiLCBkYXRhID0+IHsKICAgIC8vdGhpcy5zY3JlZW5zaG90cyA9IGRhdGE7CiAgICAvL30pOwogICAgdGhpcy4kcm9vdC4kb24oInBhdGllbnREYXRhU2lkZWJhciIsIGRhdGEgPT4gewogICAgICB0aGlzLnBhdGllbnQgPSBkYXRhOwogICAgfSk7CiAgfQp9Owo="},{"version":3,"sources":["rightSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rightSidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    Notizen ABCDE-Schema:\n    <div v-if=\"patient.status.a.notes\">\n      <b>A: </b>\n      {{ patient.status.a.notes }}\n    </div>\n    <div v-if=\"patient.status.b.notes\">\n      <b>B: </b>\n      {{ patient.status.b.notes }}\n    </div>\n    <div v-if=\"patient.status.c.notes\">\n      <b>C: </b>\n      {{ patient.status.c.notes }}\n    </div>\n    <div v-if=\"patient.status.d.notes\">\n      <b>D: </b>\n      {{ patient.status.d.notes }}\n    </div>\n    <div v-if=\"patient.status.e.notes\">\n      <b>E: </b>\n      {{ patient.status.e.notes }}\n    </div>\n\n    <!-- Gallery for Screenshots -->\n    <!--<b>\n            <u>Screenshots</u>\n        </b>\n        < make border around screenshots with div \n        <canvas ref=\"canvas\" class=\"galleryCanvas\" id=\"galleryCanvas\" width=\"640\" height=\"480\"></canvas>\n        <ul>\n            <li v-for=\"i in screenshots\" :key=\"i.id\">\n                <img v-bind:src=\"i\" height=\"50\" />\n            </li>\n        </ul> \n        < <Gallery /> -->\n  </div>\n</template>\n\n<script>\n// import Gallery from \"./Gallery\";\nexport default {\n  // components: {\n  //     Gallery,\n  // },\n  data() {\n    return {\n      screenshots: [],\n      output: \"\",\n      patient: Object\n    };\n  },\n  mounted() {\n    // this.$root.emit(\"selectScreenshots\", \"captures\");\n    //this.$root.$on(\"selectScreenshots\", data => {\n    //this.screenshots = data;\n    //});\n    this.$root.$on(\"patientDataSidebar\", data => {\n      this.patient = data;\n    });\n  }\n};\n</script>\n\n"]}]}