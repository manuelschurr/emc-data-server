{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/rtwSelection.vue","mtime":1597668567791},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCnZhciBheGlvcyA9IHJlcXVpcmUoImF4aW9zIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlJ0d1NlbGVjdGlvbiIsCiAgcHJvcHM6IHsKICAgIHNlbGVjdFJUVzogRnVuY3Rpb24sCiAgICBhbWJ1bGFuY2VzOiBBcnJheQogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGFycml2YWxUaW1lczogW10sCiAgICBhbWJ1bGFuY2VzV2l0aEVUQXM6IFtdLAogICAgYW1idWxhbmNlc1dpdGhOb0VUQTogW10sCiAgICBydHdMb2NhdGlvbnM6IFtgWyR7OC40ODcyNTV9LCAkezQ5LjQ5MjQyN31dYF0sCiAgICBzdGF0ZU1lc3NhZ2U6ICJCZXJlY2huZSBnZXNjaMOkdHp0ZSBBbmt1bmZ0c3plaXQiCiAgfSksCiAgbWV0aG9kczogewogICAgY29tcHV0ZUVUQTogZnVuY3Rpb24oY3VycmVudFJ0dykgewogICAgICBsZXQgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgICBpZiAodGhpcy5ydHdMb2NhdGlvbnMubGVuZ3RoID4gMSkgewogICAgICAgIHJlcXVlc3Qub3BlbigKICAgICAgICAgICJQT1NUIiwKICAgICAgICAgICJodHRwczovL2FwaS5vcGVucm91dGVzZXJ2aWNlLm9yZy92Mi9tYXRyaXgvZHJpdmluZy1jYXIiCiAgICAgICAgKTsKCiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKAogICAgICAgICAgIkFjY2VwdCIsCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiwgYXBwbGljYXRpb24vZ2VvK2pzb24sIGFwcGxpY2F0aW9uL2dweCt4bWwsIGltZy9wbmc7IGNoYXJzZXQ9dXRmLTgiCiAgICAgICAgKTsKICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtVHlwZSIsICJhcHBsaWNhdGlvbi9qc29uIik7CiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKAogICAgICAgICAgIkF1dGhvcml6YXRpb24iLAogICAgICAgICAgIjViM2NlMzU5Nzg1MTExMDAwMWNmNjI0ODZjZDc0NmRiZmE0MDQxODdiNWZlZTM2MzI4OWU4ZmVkIiAvL0FQSSBLZXkKICAgICAgICApOwogICAgICAgIGxldCBjb250ZXh0ID0gdGhpczsKICAgICAgICByZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgaWYgKHJlcXVlc3QucmVhZHlTdGF0ZSA9PT0gNCkgewogICAgICAgICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgIGN1cnJlbnRSdHcuZXRhID0gY29udGV4dC5zZWNUb1RpbWUoCiAgICAgICAgICAgICAgICBKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KS5kdXJhdGlvbnNbMV1bMF0KICAgICAgICAgICAgICApOwogICAgICAgICAgICAgIGNvbnRleHQuYW1idWxhbmNlc1dpdGhFVEFzLnB1c2goY3VycmVudFJ0dyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY3VycmVudFJ0dy5ldGEgPSAiRmVobGVyIGJlaSBSb3V0ZW4gU2Nobml0dHN0ZWxsZSI7CiAgICAgICAgICAgICAgY29udGV4dC5hbWJ1bGFuY2VzV2l0aEVUQXMucHVzaChjdXJyZW50UnR3KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgY29uc3QgYm9keSA9IGB7ImxvY2F0aW9ucyI6IFske3RoaXMucnR3TG9jYXRpb25zfV19YDsKICAgICAgICByZXF1ZXN0LnNlbmQoYm9keSk7CiAgICAgIH0KICAgIH0sCiAgICBzZWNUb1RpbWU6IGZ1bmN0aW9uKGV0YUluU2VjKSB7CiAgICAgIGlmICghaXNOYU4oZXRhSW5TZWMpKSB7CiAgICAgICAgY29uc3QgcnR3VGltZVJlZHVjdGlvbkZhY3RvciA9IDAuNzM0OwogICAgICAgIGV0YUluU2VjID0gZXRhSW5TZWMgKiBydHdUaW1lUmVkdWN0aW9uRmFjdG9yOwogICAgICAgIHZhciBzZWNvbmRzID0gTWF0aC5mbG9vcihldGFJblNlYyAlIDYwKS50b1N0cmluZygpOwogICAgICAgIHZhciBtaW51dGVzID0gTWF0aC5mbG9vcihldGFJblNlYyAvIDYwKS50b1N0cmluZygpOwogICAgICAgIGlmIChzZWNvbmRzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgc2Vjb25kcyA9ICIwIiArIHNlY29uZHM7CiAgICAgICAgfQogICAgICAgIHJldHVybiBtaW51dGVzICsgIiBNaW51dGVuICIgKyBzZWNvbmRzICsgIiBTZWt1bmRlbiI7CiAgICAgIH0KICAgIH0sCiAgICBnZXRHbnNzRGF0YTogZnVuY3Rpb24oKSB7CiAgICAgIGZvciAodmFyIHJ0dyBvZiB0aGlzLmFtYnVsYW5jZXMpIHsKICAgICAgICBpZiAocnR3LmFtYnVsYW5jZUlkKSB7CiAgICAgICAgICBsZXQgY29uZmlnID0gewogICAgICAgICAgICBtZXRob2Q6ICJnZXQiLAogICAgICAgICAgICB1cmw6CiAgICAgICAgICAgICAgImh0dHBzOi8vMTM0LjE1NS40OC4yMTE6MzAwMC9hbWJ1bGFuY2UvZmluZEduc3NCeUFtYnVsYW5jZUlkLyIgKwogICAgICAgICAgICAgIHJ0dy5hbWJ1bGFuY2VJZAogICAgICAgICAgfTsKCiAgICAgICAgICBheGlvcyhjb25maWcpCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdGF0dXNDb2RlID09PSAiMTAwMDAiKSB7CiAgICAgICAgICAgICAgICB0aGlzLnJ0d0xvY2F0aW9ucy5zcGxpY2UoCiAgICAgICAgICAgICAgICAgIDEsCiAgICAgICAgICAgICAgICAgIDEsCiAgICAgICAgICAgICAgICAgIGBbJHtyZXNwb25zZS5kYXRhLmRhdGEubG9uZ2l0dWRlfSwgJHtyZXNwb25zZS5kYXRhLmRhdGEubGF0aXR1ZGV9XWAKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFJ0dzsKICAgICAgICAgICAgICAgIGZvciAodmFyIGMgb2YgdGhpcy5hbWJ1bGFuY2VzKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmRhdGEuYW1idWxhbmNlSWQgPT09IGMuYW1idWxhbmNlSWQpIHsKICAgICAgICAgICAgICAgICAgICBjdXJyZW50UnR3ID0gYzsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5jb21wdXRlRVRBKGN1cnJlbnRSdHcpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgICAgICB2YXIgZXJyb3JJZCA9IEpTT04uc3RyaW5naWZ5KGVycm9yLmNvbmZpZy51cmwuc2xpY2UoLTEpKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiTm8gR05TUyBEYXRhIGZvciBBbWJ1bGFuY2VJRDogIiArIGVycm9ySWQpOwogICAgICAgICAgICAgIHRoaXMuc3RhdGVNZXNzYWdlID0gSlNPTi5zdHJpbmdpZnkoZXJyb3IubWVzc2FnZSk7CgogICAgICAgICAgICAgIC8vYWRkIEkKICAgICAgICAgICAgICBmb3IgKHZhciBlYSBvZiB0aGlzLmFtYnVsYW5jZXMpIHsKICAgICAgICAgICAgICAgIGlmIChgIiR7ZWEuYW1idWxhbmNlSWR9ImAgPT09IGVycm9ySWQpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlRFU1QiKTsKICAgICAgICAgICAgICAgICAgZWEuZXRhID0gIktlaW5lIEdOU1MgRGF0ZW4gdmVyZsO8Z2JhciI7CiAgICAgICAgICAgICAgICAgIHRoaXMuYW1idWxhbmNlc1dpdGhFVEFzLnB1c2goZWEpOwogICAgICAgICAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgIHRoaXMuZ2V0R25zc0RhdGEoKTsKICB9Cn07Cg=="},{"version":3,"sources":["rtwSelection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rtwSelection.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"rtw_selection\">\n    <div>\n      <h1>\n        <img\n          style=\"vertical-align: text-top;\"\n          alt=\"Universitätsklinikum Mannheim logo\"\n          src=\"../assets/umm_logo.png\"\n          height=\"50\"\n          width=\"150\"\n        />\n        Universitätsklinikum Mannheim\n      </h1>\n      <ul v-if=\"ambulances.length\">\n        <div v-if=\"ambulancesWithETAs.length\">\n          <li\n            v-for=\"ambulance in ambulancesWithETAs\"\n            v-bind:key=\"ambulance.identifier\"\n          >\n            <p>\n              <button @click=\"selectRTW(ambulance)\">\n                <img src=\"../assets/ambulance.png\" width=\"100\" />\n                <br />\n                <br />\n                RTW - {{ ambulance.identifier }}\n                <br />\n                ETA: {{ ambulance.eta }}\n                <br />\n                Diagnose: {{ ambulance.diagnosis }}\n                <br />\n                <ul>\n                  <li\n                    v-for=\"(value, name) in ambulance.abcde_schema\"\n                    v-bind:key=\"name\"\n                  >\n                    <div class=\"text-center\">\n                      <button\n                        v-if=\"value === true\"\n                        disabled\n                        pill\n                        class=\"rounded-circle notOkABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                      <button\n                        v-else-if=\"value === false\"\n                        disabled\n                        pill\n                        class=\"rounded-circle okABCDE\"\n                      >\n                        {{ name }}\n                      </button>\n                    </div>\n                  </li>\n                </ul>\n              </button>\n            </p>\n          </li>\n        </div>\n        <div v-else class=\"d-flex justify-content-center\">\n          <div\n            class=\"spinner-border\"\n            style=\"position: fixed; top: 50%;\"\n            role=\"status\"\n          ></div>\n          <div style=\"position: fixed; top: 55%;\">{{ stateMessage }}</div>\n        </div>\n      </ul>\n      <h3 v-else>... Aktuell fahren keine RTW's das UMM an ...</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nvar axios = require(\"axios\");\n\nexport default {\n  name: \"RtwSelection\",\n  props: {\n    selectRTW: Function,\n    ambulances: Array\n  },\n  data: () => ({\n    arrivalTimes: [],\n    ambulancesWithETAs: [],\n    ambulancesWithNoETA: [],\n    rtwLocations: [`[${8.487255}, ${49.492427}]`],\n    stateMessage: \"Berechne geschätzte Ankunftszeit\"\n  }),\n  methods: {\n    computeETA: function(currentRtw) {\n      let request = new XMLHttpRequest();\n      if (this.rtwLocations.length > 1) {\n        request.open(\n          \"POST\",\n          \"https://api.openrouteservice.org/v2/matrix/driving-car\"\n        );\n\n        request.setRequestHeader(\n          \"Accept\",\n          \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\"\n        );\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.setRequestHeader(\n          \"Authorization\",\n          \"5b3ce3597851110001cf62486cd746dbfa404187b5fee363289e8fed\" //API Key\n        );\n        let context = this;\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              currentRtw.eta = context.secToTime(\n                JSON.parse(request.responseText).durations[1][0]\n              );\n              context.ambulancesWithETAs.push(currentRtw);\n            } else {\n              currentRtw.eta = \"Fehler bei Routen Schnittstelle\";\n              context.ambulancesWithETAs.push(currentRtw);\n            }\n          }\n        };\n        const body = `{\"locations\": [${this.rtwLocations}]}`;\n        request.send(body);\n      }\n    },\n    secToTime: function(etaInSec) {\n      if (!isNaN(etaInSec)) {\n        const rtwTimeReductionFactor = 0.734;\n        etaInSec = etaInSec * rtwTimeReductionFactor;\n        var seconds = Math.floor(etaInSec % 60).toString();\n        var minutes = Math.floor(etaInSec / 60).toString();\n        if (seconds.length === 1) {\n          seconds = \"0\" + seconds;\n        }\n        return minutes + \" Minuten \" + seconds + \" Sekunden\";\n      }\n    },\n    getGnssData: function() {\n      for (var rtw of this.ambulances) {\n        if (rtw.ambulanceId) {\n          let config = {\n            method: \"get\",\n            url:\n              \"https://134.155.48.211:3000/ambulance/findGnssByAmbulanceId/\" +\n              rtw.ambulanceId\n          };\n\n          axios(config)\n            .then(response => {\n              if (response.data.statusCode === \"10000\") {\n                this.rtwLocations.splice(\n                  1,\n                  1,\n                  `[${response.data.data.longitude}, ${response.data.data.latitude}]`\n                );\n                var currentRtw;\n                for (var c of this.ambulances) {\n                  if (response.data.data.ambulanceId === c.ambulanceId) {\n                    currentRtw = c;\n                  }\n                }\n                this.computeETA(currentRtw);\n              }\n            })\n            .catch(error => {\n              var errorId = JSON.stringify(error.config.url.slice(-1));\n              console.log(\"No GNSS Data for AmbulanceID: \" + errorId);\n              this.stateMessage = JSON.stringify(error.message);\n\n              //add I\n              for (var ea of this.ambulances) {\n                if (`\"${ea.ambulanceId}\"` === errorId) {\n                  console.log(\"TEST\");\n                  ea.eta = \"Keine GNSS Daten verfügbar\";\n                  this.ambulancesWithETAs.push(ea);\n                  this.$forceUpdate();\n                }\n              }\n            });\n        }\n      }\n    }\n  },\n  mounted: function() {\n    this.getGnssData();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin: 5px 0 40px;\n}\nh3 {\n  margin: 100px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 5px;\n}\nli {\n  display: inline-block;\n  margin: 5px 5px;\n}\n.okABCDE {\n  background-color: lightgreen;\n}\n.notOkABCDE {\n  background-color: lightcoral;\n}\n</style>\n"]}]}