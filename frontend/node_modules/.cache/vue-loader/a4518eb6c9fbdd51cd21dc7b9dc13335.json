{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/leftSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/leftSidebar.vue","mtime":1597225158876},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd0NvbXBvbmVudE1hcDogZmFsc2UsCiAgICAgIHNob3dDb21wb25lbnRTdHJlYW06IGZhbHNlLAogICAgICBzaG93Q29tcG9uZW50UHVsc294eTogZmFsc2UsCiAgICAgIHBhc3RFdmVudDogbnVsbCwKICAgICAgc2VsZWN0aW9uOiBbXSwKICAgICAgbGFzdFB1bHNlOiBudWxsLAogICAgICBsYXN0U3BvMjogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRyb290LiRvbigibGFzdFB1bHNlRGF0YSIsIGRhdGEgPT4gewogICAgICB0aGlzLmxhc3RQdWxzZSA9IGRhdGE7CiAgICB9KTsKICAgIHRoaXMuJHJvb3QuJG9uKCJsYXN0U3BvMkRhdGEiLCBkYXRhID0+IHsKICAgICAgdGhpcy5sYXN0U3BvMiA9IGRhdGE7CiAgICB9KTsKICB9LAogIHByb3BzOiB7CiAgICBhcnJpdmFsVGltZTogU3RyaW5nCiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRTZWxlY3Rpb24oZXZlbnQpIHsKICAgICAgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQuaWQgPT09ICJidG4tcHVscyIpIHsKICAgICAgICB0aGlzLnNob3dDb21wb25lbnRQdWxzb3h5ID0gIXRoaXMuc2hvd0NvbXBvbmVudFB1bHNveHk7CiAgICAgIH0gZWxzZSBpZiAoZXZlbnQuY3VycmVudFRhcmdldC5pZCA9PT0gImJ0bi1zdHJlYW0iKSB7CiAgICAgICAgdGhpcy5zaG93Q29tcG9uZW50U3RyZWFtID0gIXRoaXMuc2hvd0NvbXBvbmVudFN0cmVhbTsKICAgICAgfSBlbHNlIGlmIChldmVudC5jdXJyZW50VGFyZ2V0LmlkID09PSAiYnRuLXBvc2l0aW9uIikgewogICAgICAgIHRoaXMuc2hvd0NvbXBvbmVudE1hcCA9ICF0aGlzLnNob3dDb21wb25lbnRNYXA7CiAgICAgIH0KICAgICAgdGhpcy5wYXN0RXZlbnQgPSBldmVudC5jdXJyZW50VGFyZ2V0LmlkOwogICAgICBpZiAoIXRoaXMuc2VsZWN0aW9uLmluY2x1ZGVzKGV2ZW50LmN1cnJlbnRUYXJnZXQuaWQpKSB7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24ucHVzaChldmVudC5jdXJyZW50VGFyZ2V0LmlkKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBsZXQgaW5kZXggPSB0aGlzLnNlbGVjdGlvbi5pbmRleE9mKGV2ZW50LmN1cnJlbnRUYXJnZXQuaWQpOwogICAgICAgIGlmIChpbmRleCA+IC0xKSB7CiAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLiRyb290LiRlbWl0KCJzZWxlY3RlZENvbXBvbmVudCIsIHRoaXMuc2VsZWN0aW9uKTsKICAgIH0sCiAgICB0b2dnbGVCdXR0b24oc3RhdHVzKSB7CiAgICAgIGxldCBidXR0b25DbGFzcyA9ICIiOwogICAgICBpZiAoc3RhdHVzKSB7CiAgICAgICAgYnV0dG9uQ2xhc3MgPSAib2tBQkNERSI7CiAgICAgIH0KICAgICAgcmV0dXJuIGJ1dHRvbkNsYXNzOwogICAgfQogIH0gLyogLAogIGZpbHRlcnM6IHsKICAgIHNlY1RvVGltZTogZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHZhciBzZWNvbmRzID0gTWF0aC5mbG9vcih2YWx1ZSAlIDYwKS50b1N0cmluZygpOwogICAgICB2YXIgbWludXRlcyA9IE1hdGguZmxvb3IodmFsdWUgLyA2MCkudG9TdHJpbmcoKTsKICAgICAgaWYgKHNlY29uZHMubGVuZ3RoID09PSAxKSB7CiAgICAgICAgc2Vjb25kcyA9ICIwIiArIHNlY29uZHM7CiAgICAgIH0KICAgICAgcmV0dXJuIG1pbnV0ZXMgKyAiOiIgKyBzZWNvbmRzOwogICAgfSwKICB9LCAqLwp9Owo="},{"version":3,"sources":["leftSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"leftSidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"btn-group-vertical\" data-toggel=\"buttons\" role=\"group\">\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-puls\"\n        class=\"btn btn-secondary\"\n        :class=\"toggleButton(showComponentPulsoxy)\"\n      >\n        Puls Oxy\n        <br />\n        Puls: {{ lastPulse }}\n        <br />\n        SpO2: {{ lastSpo2 }}\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-stream\"\n        class=\"btn btn-secondary\"\n        :class=\"toggleButton(showComponentStream)\"\n      >\n        Live Bild\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-position\"\n        class=\"btn btn-secondary\"\n        :class=\"toggleButton(showComponentMap)\"\n      >\n        Position\n        <br />\n        ETA: {{ arrivalTime ? arrivalTime : \"-\" }} Minuten\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showComponentMap: false,\n      showComponentStream: false,\n      showComponentPulsoxy: false,\n      pastEvent: null,\n      selection: [],\n      lastPulse: null,\n      lastSpo2: null\n    };\n  },\n  mounted() {\n    this.$root.$on(\"lastPulseData\", data => {\n      this.lastPulse = data;\n    });\n    this.$root.$on(\"lastSpo2Data\", data => {\n      this.lastSpo2 = data;\n    });\n  },\n  props: {\n    arrivalTime: String\n  },\n  methods: {\n    setSelection(event) {\n      if (event.currentTarget.id === \"btn-puls\") {\n        this.showComponentPulsoxy = !this.showComponentPulsoxy;\n      } else if (event.currentTarget.id === \"btn-stream\") {\n        this.showComponentStream = !this.showComponentStream;\n      } else if (event.currentTarget.id === \"btn-position\") {\n        this.showComponentMap = !this.showComponentMap;\n      }\n      this.pastEvent = event.currentTarget.id;\n      if (!this.selection.includes(event.currentTarget.id)) {\n        this.selection.push(event.currentTarget.id);\n      } else {\n        let index = this.selection.indexOf(event.currentTarget.id);\n        if (index > -1) {\n          this.selection.splice(index, 1);\n        }\n      }\n      this.$root.$emit(\"selectedComponent\", this.selection);\n    },\n    toggleButton(status) {\n      let buttonClass = \"\";\n      if (status) {\n        buttonClass = \"okABCDE\";\n      }\n      return buttonClass;\n    }\n  } /* ,\n  filters: {\n    secToTime: function (value) {\n      var seconds = Math.floor(value % 60).toString();\n      var minutes = Math.floor(value / 60).toString();\n      if (seconds.length === 1) {\n        seconds = \"0\" + seconds;\n      }\n      return minutes + \":\" + seconds;\n    },\n  }, */\n};\n</script>\n<style scoped>\n.okABCDE {\n  background-color: lightgreen;\n}\n.notOkABCDE {\n  background-color: red;\n}\n</style>"]}]}