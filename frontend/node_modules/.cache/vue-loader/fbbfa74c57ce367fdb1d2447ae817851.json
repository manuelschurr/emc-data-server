{"remainingRequest":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/leftSidebar.vue?vue&type=style&index=0&id=026010f5&scoped=true&lang=css&","dependencies":[{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/src/components/leftSidebar.vue","mtime":1597225158876},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcguldner/GitHub/emc-data-server/frontend/trauma-room/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm9rQUJDREUgewogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47Cn0KLm5vdE9rQUJDREUgewogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKfQo="},{"version":3,"sources":["leftSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA","file":"leftSidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"btn-group-vertical\" data-toggel=\"buttons\" role=\"group\">\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-puls\"\n        class=\"btn btn-secondary\"\n        :class=\"toggleButton(showComponentPulsoxy)\"\n      >\n        Puls Oxy\n        <br />\n        Puls: {{ lastPulse }}\n        <br />\n        SpO2: {{ lastSpo2 }}\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-stream\"\n        class=\"btn btn-secondary\"\n        :class=\"toggleButton(showComponentStream)\"\n      >\n        Live Bild\n      </button>\n      <button\n        @click=\"setSelection($event)\"\n        id=\"btn-position\"\n        class=\"btn btn-secondary\"\n        :class=\"toggleButton(showComponentMap)\"\n      >\n        Position\n        <br />\n        ETA: {{ arrivalTime ? arrivalTime : \"-\" }} Minuten\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showComponentMap: false,\n      showComponentStream: false,\n      showComponentPulsoxy: false,\n      pastEvent: null,\n      selection: [],\n      lastPulse: null,\n      lastSpo2: null\n    };\n  },\n  mounted() {\n    this.$root.$on(\"lastPulseData\", data => {\n      this.lastPulse = data;\n    });\n    this.$root.$on(\"lastSpo2Data\", data => {\n      this.lastSpo2 = data;\n    });\n  },\n  props: {\n    arrivalTime: String\n  },\n  methods: {\n    setSelection(event) {\n      if (event.currentTarget.id === \"btn-puls\") {\n        this.showComponentPulsoxy = !this.showComponentPulsoxy;\n      } else if (event.currentTarget.id === \"btn-stream\") {\n        this.showComponentStream = !this.showComponentStream;\n      } else if (event.currentTarget.id === \"btn-position\") {\n        this.showComponentMap = !this.showComponentMap;\n      }\n      this.pastEvent = event.currentTarget.id;\n      if (!this.selection.includes(event.currentTarget.id)) {\n        this.selection.push(event.currentTarget.id);\n      } else {\n        let index = this.selection.indexOf(event.currentTarget.id);\n        if (index > -1) {\n          this.selection.splice(index, 1);\n        }\n      }\n      this.$root.$emit(\"selectedComponent\", this.selection);\n    },\n    toggleButton(status) {\n      let buttonClass = \"\";\n      if (status) {\n        buttonClass = \"okABCDE\";\n      }\n      return buttonClass;\n    }\n  } /* ,\n  filters: {\n    secToTime: function (value) {\n      var seconds = Math.floor(value % 60).toString();\n      var minutes = Math.floor(value / 60).toString();\n      if (seconds.length === 1) {\n        seconds = \"0\" + seconds;\n      }\n      return minutes + \":\" + seconds;\n    },\n  }, */\n};\n</script>\n<style scoped>\n.okABCDE {\n  background-color: lightgreen;\n}\n.notOkABCDE {\n  background-color: red;\n}\n</style>"]}]}